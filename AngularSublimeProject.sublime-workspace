{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"bootstrap.min.css"
			],
			[
				"font-s",
				"font-size\tproperty"
			],
			[
				"server",
				"serverStatus\tproperty"
			],
			[
				"war",
				"warning-alert.component.css"
			],
			[
				"agilof",
				"agiloftAuth"
			],
			[
				"url",
				"urlEncryptedValue"
			],
			[
				"htm",
				"htmlElement"
			],
			[
				"contr",
				"venueController"
			],
			[
				"gety",
				"getDay\t(): int Date"
			],
			[
				"cat",
				"cathErrors"
			],
			[
				"info",
				"infoJson"
			],
			[
				"people",
				"peopleIterator"
			],
			[
				"follo",
				"followerInfo"
			]
		]
	},
	"buffers":
	[
		{
			"file": "_RecipeBook/src/app/shopping-list/shopping-list.component.ts",
			"settings":
			{
				"buffer_size": 463,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "_RecipeBook/src/app/recipes/recipes.component.ts",
			"settings":
			{
				"buffer_size": 346,
				"line_ending": "Windows"
			}
		},
		{
			"file": "_RecipeBook/src/app/app.component.html",
			"settings":
			{
				"buffer_size": 392,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "NOTES ON ANGULAR COURSE\n=============================\n1.5\nInstall Angular:\n\tMake sure to have node installed (and npm)\n\tTo upgrade node version (mac os):\n\t\tsudo npm cache clean -f\n\t\tsudo npm install -g n\n\t\tsudo n stable\nCreate an Angular project\n\tng new name-of-the-project\n\tcd name-of-the-project\n\tng server\n1.6\n app>app.component.ts => The TypeScript of the component. Notice the selector section, which is linked with the parent root in the index.html file (app-root)\n app>app.component.html => The template of the component\n index.html => The html file that is actually rendered\n1.7\n    Installing bootstrap in project:\n        npm install --save  bootstrap@3\n        Then add the css library in angular.json file (under style section, before the 'src/styles.css' file which is the custom for the project)\n2.13\n    main.tx First file to be executed in a project. It glues all the modules\n    It starts the modules with \"bootstrapModule\" (previously defined in the import), which connects with the module.ts of your component. This module.ts of your component, connects with the specify ts file of the component itself.\n2.15\n    creating a component from scratch\n2.16\n    angular modules (and module files) bundles components\n2.18\n    Use ng generate component NAME (or ng g c NAME) to generate your own component with the comnmand line (cli)\n2.19\n    It is required to have always a template for a component, always!\n    However, you can use it external (templateURL) or inline (template)\n    If using inline, you can use ` (tics) to use multiline. Otherwise, ' for single lines\n2.20\n    As with templates, for styling the component, you can also use external file (styleUrls , notice this takes an array) or styles (using ` if you need multiple lines). It seems that the css is exclusively for that component, is not inherited in the children\n2.21\n    Selectors are like css selectors, therefore you can use [] (attributre) or . (class). Id does not work\n            selector: 'app-root' ====> <app-root></app-root>\n            selector: '[app-root]' ====> <div app-root></app-root>\n            selector: '.app-root' ======> <div class='app-root'></div>\n2.22\n    Data binding can be seen as communication between the code (TS) and the view, and the other way around, from the view towards the code (event binding), or both ways (dual bindings)\n        String Interpolation: {{serverName}}\n        Property bindings:\n                <button [disabled]=\"allowNewServer\">Add</button>\n                <p [innerText]=\"serverName\"></p>\n                N.B.: You can see the properties you can bind with console.log(element), as well events\n        React to events (event binding):\n            <button  (click)='onCreateServer()'>Add New Server</button>\n            <button  (click)='propertyName=\"new value\"' >Add New Server</button>\n            <input  (ihput)='onSomething($event)' > $event contains the data\n        Two way data inding (combined property and event binding):\n            IN ORDER TO USE TWO_WAY_BINDING (ngModel) you need to import FormsModule!\n            <input type=\"text\" class=\"form-control\" [(ngModel)]='myProperty'>\n            myProperty will change with a change in input. But also, if somewhere else the myProperty value changes, it will also be reflected in this input control.\n2.33\n    Directives: Instructions in the DOM\n        A component is a directive with template\n        But is also possible to have directive without template\n            <p appTurnGreen> This will make the paragraph into gree</p>\n        Built in directives:\n            - Structural directive (*), modifies the structure of the dom by adding/removing the item\n                *ngIf:\n                Trick to use else (beside use opposite if condition):\n                    <p *ngIf='conditioIsTrue;else elseShowBlock'>Show this on IF</p>\n                    <ng-template #elseShowBlock>\n                        <p>Show this on else</p>\n                    </ng-template>\n                *ngFor: Repeats the element where is inserted (regardless of whether you use the name in the list or not)\n                    <app-server *ngFor=\"let server of serverList\"></app-server>\n\n            - Attribute Directives: Don't modify the DOM by adding or removing elements, but rather modifying the element on which are applied\n                ngStyle: Applies styles;\n                    <p [ngStyle]=\"{'background-color': getColor()}\"> </p>\n                ngClass: Add class\n                    <p  [ngStyle]=\"{'background-color': getColor()}\"\n                        [ngClass]=\"{online:isOnline(),offline:!isOnline()}\"></p>\n4.57\n    To debut in the browser, look for the TypeScript file under the sources/webpack/. folder\n    Install augury as a chrome extension to debut\n5.61\n    Property and Event binding on HTML elements\n    Property and Event binding on diretives\n    Property and Event binding on custom properties and events\n    CUSTOM PROPERTY BINDING\n        Use to communicate from PARENT TO CHILDREN\n        Use Input decorator (do not forget to import) to expose a property to the outside\n        Then, this property can be binded to a variable from other component\n            CHILD COMPONENT (ts)\n            import { ... Input } from '@angular/core';\n            <====== MAKE SURE TO IMPORT\n\n            [...]\n\n            export class ParentComponent implements OnInit {\n                @Input('HERE_THE_ALIAS') element: { type: string, name: string, content: string};\n                <====== NOTICE THE @Input decorator\n            }\n            PARENT COMPONENT (HTML)\n            <app-server-element\n                *ngFor=\"let serverElement of serverElements\"\n                [ALIAS]=\"serverElement\"> <======== HERE THE ASSIGNMENT\n            </app-server-element>\n    CUSTOM EVENT BINDING\n        Use to communicate from CHILDREN TO PARENT\n        We need to create a new event in the child component, and emmit it with an argument.\n        Later, in the father, we catch that event and assign it to a proper method, using the argument emmited.\n\n            CHILD COMPONENT\n                TypeScript\n                    // Make sure to import EventEmitter and Output\n                    import { ... EventEmitter, Output } from '@angular/core';\n\n                    []...\n                    export class CockpitComponent implements OnInit {\n                        // Create event, assign alias and specify argument that will be passed\n                      @Output('HERE_THE_EVENT_ALIAS') newChildEvent = new EventEmitter<{serverName: string, serverContent: string}>();\n                      // Use a method to trigger te emmision of the event\n\n                      property_1;\n                      property_2;\n\n                      onSomethingHappendInChildComponent() {\n                        //Emmit the event and properties\n                        this.newChildEvent.emit({serverName: this.property_1, serverContent: this.property_2});\n                      }\n                    }\n\n                HTML\n                    <button (click)=\"onSomethingHappendInChildComponent()\">Emmit New Event</button>\n\n            PARENT COMPONENT\n                HTML\n                    <child-app (HERE_THE_EVENT_ALIAS)=\"parent_method($event)\"></child-app>\n\n                TypeScript\n                    parent_method(serverData: {serverName: string, serverContent: string}) {\n                            DO_SOMETHING_HERE\n                    })\n\n5.68 Encapsulation\n    By default, the css only applies to the component. This is because it uses encapsulation.\n    This encapsulation is done by appending to each HTML element of component an specific name, and modifying the CSS to only applies to those new components (shadowing).\n\n    However, this behavior can be changed in the component definition:\n\n    import { [...] ViewEncapsulation } from '@angular/core';\n\n    @Component({\n        [...]\n        encapsulation: ViewEncapsulation.Emulated // None, Native\n    })\n\n    - None will remove the shadowing\n\n5.69 Local Reference\n    ONLY TO BE USED IN THE TEMPLATE: Allows to have a 'copy' of the HTML element (any) in the template and pass or use this full HTML element in the template. It can be used as a way to get a value from an input\n\n        <input type=\"text\" class=\"form-control\" #serverNameElement>\n        <button class=\"btn btn-primary\" (click)=\"onAddServer(serverNameInput.value)\">Add Server</button>\n        // Notice the '#serverNameElement' and the serverNameElement.value\n5.70 Access to DOM from TS\n    It is possible to access the DOM from the ts file with the @ViewChild decorator.\n    By adding a reference name into the HTML file, we can use that reference in the TS file. This will import the HTML element into the TS file, and it is possible to access the properties in the TS.\n    DO NOT MODIFIED THE DOM DIRECTLY THROUGH THIS REFERENCE, USE OTHER ANGULAR METHODS.\n    HTML file\n        <input type=\"text\" class=\"form-control\" #ANY_NAME_HERE>\n    TypeScript file\n        import { ... ViewChild,ElementRef } from '@angular/core';\n        [...]\n\n        export class CockpitComponent implements OnInit {\n          @ViewChild('ANY_NAME_HERE') serverHTMLElementContentInput:ElementRef;\n\n          onAddServer(serverName) {\n            var serverElementContent = this.serverHTMLElementContentInput.nativeElement.value;\n            [...]\n          }\n        }\n\n    It is possible to access a child component (first one) or all the children elements\n\n    import { ... ViewChildren } from '@angular/core';\n    import {CockpitComponent} from './cockpit/cockpit.component'\n\n    export class AppComponent {\n      @ViewChildren(CockpitComponent) cockpitElement;\n\n       onServerAdded(serverData: {serverName: string, serverContent: string}) {\n         console.log(this.cockpitElement._results[0].serverHTMLElementContentInput.nativeElement.value);\n         console.log(this.cockpitElement._results[1].serverHTMLElementContentInput.nativeElement.value);\n         console.log(this.cockpitElement._results[2].serverHTMLElementContentInput.nativeElement.value);\n\n      }\n    }\n\n5.71 Use <ng-content></ng-content> to indicate a  placeholder in a child component. In this placeholder, angular will inject the text passed inside the HTML tags of hte component. The text inside will be \"projected\" into the view of the child component.\n\n    <child-component>THIS IS ANY CONTENT</child-component>\n\n    child-component.html\n        <p> BLA BLA BLA BLA BLA BLA BLA BLA BLA BLA BLA BLA  </p>\n        <ng-content></ng-content>\n        <p> BLA BLA BLA BLA BLA BLA BLA BLA BLA BLA BLA BLA  </p>\n\n5.72 Lifecycle\n    There is quite a bit of hooks that will be triggered during changes, events, constructions, deletions of the angular application: https://angular.io/guide/lifecycle-hooks:\n        - ngOnChanges()\n        - ngOnInit()\n        - ngDoCheck()\n        - ngAfterContentInit()\n        - ngAfterContentChecked()\n        - ngAfterViewInit()\n        - ngAfterViewChecked()\n        - ngOnDestroy()\n\n5.73 It is also possible to access the ng-content similto to ViewChild, but with ViewContent\n    // PARENT ELEMENT HTML\n    <child-element>\n       <p #ANY_TAG_NAME></p>\n    </child-element>\n\n    //CHILD ELEMENT TS\n        @ContentChild('ANY_TAG_NAME') contentHTML;\n\n    anyMethod(){\n        console.log(this.contentHTML.nativeElement.textContent);\n    }\n\n22.295 DEPLOYMENT\n    Just run ' ng build --prod' (it turns on AOT by default for prod (ahead of time))\n    So, it will be the same as ng build --prod --aot\n    The end product will be compiled into hte dist/SolutionName folder\n\n30.397 ANGULAR 6: WHAT'S NEW\n    [DONE, nothing to written]\n\n32.414 TYPESCRIPT\n    TYPES: string, number, boolean, Array<TYPE>, any, void and your own custom classes\n    CLASSES:\n        class car {\n            name: string;\n            private speed: number;\n            constructor(speed: number)\n            {\n                this.speed = speed || 0;\n            }\n            accelerate():void{\n                this.speed++;\n            }\n            stati numberOfWheels(): number {\n            return 4;\n            }\n        }\n\n        let car = new Car(5);\n        car.accelerate();\n        Car.numberOfWheels(); // Calling the static method from the class itself\n    INTERFACES\n        interface User {\n            username: string;\n            age?: number; // Optional property, does no need to be implemented\n            accelerate(speed:number):void;\n        }\n\n        let newUser:User = {\n            username: 'huertaj';\n            accelerate: function(speed:number){\n                /...\n            }\n        }\n    MODULES\n        Declaring a class to be used outside the file\n        export class ClassName {\n            // ...\n        }\n        If you don't use export (modularity), the class wont be able to be used outside that file\n\n7.83 DIRECTIVES\n    Attribute Directives: Sit on element and only affect that element\n    Structural Directives: Sit on element but changes the DOM by adding/removing elements on it",
			"file": "CourseNotes.txt",
			"file_size": 13147,
			"file_write_time": 131868210882183676,
			"settings":
			{
				"buffer_size": 13047,
				"line_ending": "Windows"
			}
		},
		{
			"file": "_RecipeBook/src/app/app.component.ts",
			"settings":
			{
				"buffer_size": 268,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 17767 files for \"display:string=\"\"\"\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\src\\app\\recipes\\recipe.model.ts:\n    4      public imagePath: string;\n    5  \n    6:     display:string=\"\";\n    7  \n    8      constructor(name: string, desc: string, imagePath: string){\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\src\\app\\recipes\\recipes.component.ts:\n    9  \n   10    constructor() { }\n   11: \t@Input('display') display:string=\"\";\n   12    ngOnInit() {\n   13    }\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\src\\app\\shopping-list\\shopping-list.component.ts:\n   12    ];\n   13  \n   14:   @Input('display') display:string=\"\";\n   15  \n   16    constructor() { }\n\n3 matches across 3 files\n\n\nSearching 17767 files for \"emmiter\"\n\n0 matches\n\nSearching 17767 files for \"emit(\"\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@angular\\compiler-cli\\src\\ngtools_api2.d.ts:\n  106      loadNgStructureAsync(): Promise<void>;\n  107      listLazyRoutes(entryRoute?: string): LazyRoute[];\n  108:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback }: {\n  109          emitFlags?: EmitFlags;\n  110          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@angular\\compiler-cli\\src\\ngtsc\\program.d.ts:\n   37      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   38      private ensureAnalyzed;\n   39:     emit(opts?: {\n   40          emitFlags?: api.EmitFlags;\n   41          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@angular\\compiler-cli\\src\\transformers\\api.d.ts:\n  243       * Angular structural information is required to emit files.\n  244       */\n  245:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback, mergeEmitResultsCallback }?: {\n  246          emitFlags?: EmitFlags;\n  247          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@angular\\compiler-cli\\src\\transformers\\tsc_pass_through.d.ts:\n   33      getEmittedGeneratedFiles(): Map<string, GeneratedFile>;\n   34      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   35:     emit(opts?: {\n   36          emitFlags?: api.EmitFlags;\n   37          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@angular\\core\\src\\event_emitter.d.ts:\n   36   *     this.visible = !this.visible;\n   37   *     if (this.visible) {\n   38:  *       this.open.emit(null);\n   39   *     } else {\n   40:  *       this.close.emit(null);\n   41   *     }\n   42   *   }\n   ..\n   77       * @param value The value to emit.\n   78       */\n   79:     emit(value?: T): void;\n   80      /**\n   81       * Registers handlers for events emitted by this instance.\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@types\\node\\index.d.ts:\n  416          getMaxListeners(): number;\n  417          listeners(event: string | symbol): Function[];\n  418:         emit(event: string | symbol, ...args: any[]): boolean;\n  419          listenerCount(type: string | symbol): number;\n  420          // Added in Node 6...\n  ...\n  644          addListener(event: \"removeListener\", listener: RemoveListenerListener): this;\n  645  \n  646:         emit(event: \"beforeExit\", code: number): boolean;\n  647:         emit(event: \"disconnect\"): boolean;\n  648:         emit(event: \"exit\", code: number): boolean;\n  649:         emit(event: \"rejectionHandled\", promise: Promise<any>): boolean;\n  650:         emit(event: \"uncaughtException\", error: Error): boolean;\n  651:         emit(event: \"unhandledRejection\", reason: any, promise: Promise<any>): boolean;\n  652:         emit(event: \"warning\", warning: Error): boolean;\n  653:         emit(event: \"message\", message: any, sendHandle: any): this;\n  654:         emit(event: Signals): boolean;\n  655:         emit(event: \"newListener\", eventName: string | symbol, listener: (...args: any[]) => void): this;\n  656:         emit(event: \"removeListener\", eventName: string, listener: (...args: any[]) => void): this;\n  657  \n  658          on(event: \"beforeExit\", listener: BeforeExitListener): this;\n  ...\n  917              getMaxListeners(): number;\n  918              listeners(event: string | symbol): Function[];\n  919:             emit(event: string | symbol, ...args: any[]): boolean;\n  920              eventNames(): Array<string | symbol>;\n  921              listenerCount(type: string | symbol): number;\n  ...\n 1217          addListener(event: \"online\", listener: () => void): this;\n 1218  \n 1219:         emit(event: string | symbol, ...args: any[]): boolean;\n 1220:         emit(event: \"disconnect\"): boolean;\n 1221:         emit(event: \"error\", error: Error): boolean;\n 1222:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1223:         emit(event: \"listening\", address: Address): boolean;\n 1224:         emit(event: \"message\", message: any, handle: net.Socket | net.Server): boolean;\n 1225:         emit(event: \"online\"): boolean;\n 1226  \n 1227          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1291          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1292  \n 1293:         emit(event: string | symbol, ...args: any[]): boolean;\n 1294:         emit(event: \"disconnect\", worker: Worker): boolean;\n 1295:         emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1296:         emit(event: \"fork\", worker: Worker): boolean;\n 1297:         emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1298:         emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1299:         emit(event: \"online\", worker: Worker): boolean;\n 1300:         emit(event: \"setup\", settings: any): boolean;\n 1301  \n 1302          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1368      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1369  \n 1370:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1371:     export function emit(event: \"disconnect\", worker: Worker): boolean;\n 1372:     export function emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1373:     export function emit(event: \"fork\", worker: Worker): boolean;\n 1374:     export function emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1375:     export function emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1376:     export function emit(event: \"online\", worker: Worker): boolean;\n 1377:     export function emit(event: \"setup\", settings: any): boolean;\n 1378  \n 1379      export function on(event: string, listener: (...args: any[]) => void): Cluster;\n ....\n 1823          addListener(event: \"reset\", listener: (...args: any[]) => void): this;\n 1824  \n 1825:         emit(event: string | symbol, ...args: any[]): boolean;\n 1826:         emit(event: \"exit\"): boolean;\n 1827:         emit(event: \"reset\", context: any): boolean;\n 1828  \n 1829          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1894          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1895  \n 1896:         emit(event: string | symbol, ...args: any[]): boolean;\n 1897:         emit(event: \"close\"): boolean;\n 1898:         emit(event: \"line\", input: any): boolean;\n 1899:         emit(event: \"pause\"): boolean;\n 1900:         emit(event: \"resume\"): boolean;\n 1901:         emit(event: \"SIGCONT\"): boolean;\n 1902:         emit(event: \"SIGINT\"): boolean;\n 1903:         emit(event: \"SIGTSTP\"): boolean;\n 1904  \n 1905          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2032          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 2033  \n 2034:         emit(event: string | symbol, ...args: any[]): boolean;\n 2035:         emit(event: \"close\", code: number, signal: string): boolean;\n 2036:         emit(event: \"disconnect\"): boolean;\n 2037:         emit(event: \"error\", err: Error): boolean;\n 2038:         emit(event: \"exit\", code: number, signal: string): boolean;\n 2039:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 2040  \n 2041          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2654          addListener(event: \"timeout\", listener: () => void): this;\n 2655  \n 2656:         emit(event: string | symbol, ...args: any[]): boolean;\n 2657:         emit(event: \"close\", had_error: boolean): boolean;\n 2658:         emit(event: \"connect\"): boolean;\n 2659:         emit(event: \"data\", data: Buffer): boolean;\n 2660:         emit(event: \"drain\"): boolean;\n 2661:         emit(event: \"end\"): boolean;\n 2662:         emit(event: \"error\", err: Error): boolean;\n 2663:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2664:         emit(event: \"timeout\"): boolean;\n 2665  \n 2666          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2749          addListener(event: \"listening\", listener: () => void): this;\n 2750  \n 2751:         emit(event: string | symbol, ...args: any[]): boolean;\n 2752:         emit(event: \"close\"): boolean;\n 2753:         emit(event: \"connection\", socket: Socket): boolean;\n 2754:         emit(event: \"error\", err: Error): boolean;\n 2755:         emit(event: \"listening\"): boolean;\n 2756  \n 2757          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2874          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2875  \n 2876:         emit(event: string | symbol, ...args: any[]): boolean;\n 2877:         emit(event: \"close\"): boolean;\n 2878:         emit(event: \"error\", err: Error): boolean;\n 2879:         emit(event: \"listening\"): boolean;\n 2880:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2881  \n 2882          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 4930          addListener(event: \"secureConnect\", listener: () => void): this;\n 4931  \n 4932:         emit(event: string | symbol, ...args: any[]): boolean;\n 4933:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 4934:         emit(event: \"secureConnect\"): boolean;\n 4935  \n 4936          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5000          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 5001  \n 5002:         emit(event: string | symbol, ...args: any[]): boolean;\n 5003:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 5004:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 5005:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 5006:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 5007:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 5008  \n 5009          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5309              addListener(event: \"error\", listener: (err: Error) => void): this;\n 5310  \n 5311:             emit(event: string | symbol, ...args: any[]): boolean;\n 5312:             emit(event: \"close\"): boolean;\n 5313:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 5314:             emit(event: \"end\"): boolean;\n 5315:             emit(event: \"readable\"): boolean;\n 5316:             emit(event: \"error\", err: Error): boolean;\n 5317  \n 5318              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5397              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 5398  \n 5399:             emit(event: string | symbol, ...args: any[]): boolean;\n 5400:             emit(event: \"close\"): boolean;\n 5401:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 5402:             emit(event: \"error\", err: Error): boolean;\n 5403:             emit(event: \"finish\"): boolean;\n 5404:             emit(event: \"pipe\", src: Readable): boolean;\n 5405:             emit(event: \"unpipe\", src: Readable): boolean;\n 5406  \n 5407              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6174          addListener(event: \"trailers\", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;\n 6175  \n 6176:         emit(event: string | symbol, ...args: any[]): boolean;\n 6177:         emit(event: \"aborted\"): boolean;\n 6178:         emit(event: \"close\"): boolean;\n 6179:         emit(event: \"data\", chunk: Buffer | string): boolean;\n 6180:         emit(event: \"drain\"): boolean;\n 6181:         emit(event: \"end\"): boolean;\n 6182:         emit(event: \"error\", err: Error): boolean;\n 6183:         emit(event: \"finish\"): boolean;\n 6184:         emit(event: \"frameError\", frameType: number, errorCode: number): boolean;\n 6185:         emit(event: \"pipe\", src: stream.Readable): boolean;\n 6186:         emit(event: \"unpipe\", src: stream.Readable): boolean;\n 6187:         emit(event: \"streamClosed\", code: number): boolean;\n 6188:         emit(event: \"timeout\"): boolean;\n 6189:         emit(event: \"trailers\", trailers: IncomingHttpHeaders, flags: number): boolean;\n 6190  \n 6191          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6256          addListener(event: \"response\", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;\n 6257  \n 6258:         emit(event: string | symbol, ...args: any[]): boolean;\n 6259:         emit(event: \"headers\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6260:         emit(event: \"push\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6261:         emit(event: \"response\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6262  \n 6263          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6357          addListener(event: \"timeout\", listener: () => void): this;\n 6358  \n 6359:         emit(event: string | symbol, ...args: any[]): boolean;\n 6360:         emit(event: \"close\"): boolean;\n 6361:         emit(event: \"error\", err: Error): boolean;\n 6362:         emit(event: \"frameError\", frameType: number, errorCode: number, streamID: number): boolean;\n 6363:         emit(event: \"goaway\", errorCode: number, lastStreamID: number, opaqueData: Buffer): boolean;\n 6364:         emit(event: \"localSettings\", settings: Settings): boolean;\n 6365:         emit(event: \"remoteSettings\", settings: Settings): boolean;\n 6366:         emit(event: \"socketError\", err: Error): boolean;\n 6367:         emit(event: \"timeout\"): boolean;\n 6368  \n 6369          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6415          addListener(event: \"stream\", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6416  \n 6417:         emit(event: string | symbol, ...args: any[]): boolean;\n 6418:         emit(event: \"connect\", session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6419:         emit(event: \"stream\", stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6420  \n 6421          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6443          addListener(event: \"stream\", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6444  \n 6445:         emit(event: string | symbol, ...args: any[]): boolean;\n 6446:         emit(event: \"connect\", session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6447:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6448  \n 6449          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6498          addListener(event: \"timeout\", listener: () => void): this;\n 6499  \n 6500:         emit(event: string | symbol, ...args: any[]): boolean;\n 6501:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6502:         emit(event: \"sessionError\", err: Error): boolean;\n 6503:         emit(event: \"socketError\", err: Error): boolean;\n 6504:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6505:         emit(event: \"timeout\"): boolean;\n 6506  \n 6507          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6543          addListener(event: \"unknownProtocol\", listener: (socket: tls.TLSSocket) => void): this;\n 6544  \n 6545:         emit(event: string | symbol, ...args: any[]): boolean;\n 6546:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6547:         emit(event: \"sessionError\", err: Error): boolean;\n 6548:         emit(event: \"socketError\", err: Error): boolean;\n 6549:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6550:         emit(event: \"timeout\"): boolean;\n 6551:         emit(event: \"unknownProtocol\", socket: tls.TLSSocket): boolean;\n 6552  \n 6553          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6599          addListener(event: \"aborted\", listener: (hadError: boolean, code: number) => void): this;\n 6600  \n 6601:         emit(event: string | symbol, ...args: any[]): boolean;\n 6602:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6603  \n 6604          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6649          addListener(event: \"finish\", listener: () => void): this;\n 6650  \n 6651:         emit(event: string | symbol, ...args: any[]): boolean;\n 6652:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6653:         emit(event: \"close\"): boolean;\n 6654:         emit(event: \"drain\"): boolean;\n 6655:         emit(event: \"error\", error: Error): boolean;\n 6656:         emit(event: \"finish\"): boolean;\n 6657  \n 6658          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@types\\node\\inspector.d.ts:\n 2074          addListener(event: \"HeapProfiler.heapStatsUpdate\", listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;\n 2075  \n 2076:         emit(event: string | symbol, ...args: any[]): boolean;\n 2077:         emit(event: \"inspectorNotification\", message: InspectorNotification<{}>): boolean;\n 2078:         emit(event: \"Runtime.executionContextCreated\", message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>): boolean;\n 2079:         emit(event: \"Runtime.executionContextDestroyed\", message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>): boolean;\n 2080:         emit(event: \"Runtime.executionContextsCleared\"): boolean;\n 2081:         emit(event: \"Runtime.exceptionThrown\", message: InspectorNotification<Runtime.ExceptionThrownEventDataType>): boolean;\n 2082:         emit(event: \"Runtime.exceptionRevoked\", message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>): boolean;\n 2083:         emit(event: \"Runtime.consoleAPICalled\", message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>): boolean;\n 2084:         emit(event: \"Runtime.inspectRequested\", message: InspectorNotification<Runtime.InspectRequestedEventDataType>): boolean;\n 2085:         emit(event: \"Debugger.scriptParsed\", message: InspectorNotification<Debugger.ScriptParsedEventDataType>): boolean;\n 2086:         emit(event: \"Debugger.scriptFailedToParse\", message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>): boolean;\n 2087:         emit(event: \"Debugger.breakpointResolved\", message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>): boolean;\n 2088:         emit(event: \"Debugger.paused\", message: InspectorNotification<Debugger.PausedEventDataType>): boolean;\n 2089:         emit(event: \"Debugger.resumed\"): boolean;\n 2090:         emit(event: \"Console.messageAdded\", message: InspectorNotification<Console.MessageAddedEventDataType>): boolean;\n 2091:         emit(event: \"Profiler.consoleProfileStarted\", message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>): boolean;\n 2092:         emit(event: \"Profiler.consoleProfileFinished\", message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>): boolean;\n 2093:         emit(event: \"HeapProfiler.addHeapSnapshotChunk\", message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>): boolean;\n 2094:         emit(event: \"HeapProfiler.resetProfiles\"): boolean;\n 2095:         emit(event: \"HeapProfiler.reportHeapSnapshotProgress\", message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>): boolean;\n 2096:         emit(event: \"HeapProfiler.lastSeenObjectId\", message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>): boolean;\n 2097:         emit(event: \"HeapProfiler.heapStatsUpdate\", message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>): boolean;\n 2098  \n 2099          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\@types\\selenium-webdriver\\index.d.ts:\n 2971     * @param {...*} var_args Any arguments to pass to each listener.\n 2972     */\n 2973:   emit(type: string, ...var_args: any[]): void;\n 2974  \n 2975    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\eventemitter3\\index.d.ts:\n   25     * Calls each of the listeners registered for a given event.\n   26     */\n   27:   emit(event: EventTypes, ...args: Array<any>): boolean;\n   28  \n   29    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\protractor\\node_modules\\@types\\node\\index.d.ts:\n  375          getMaxListeners(): number;\n  376          listeners(event: string | symbol): Function[];\n  377:         emit(event: string | symbol, ...args: any[]): boolean;\n  378          listenerCount(type: string | symbol): number;\n  379          // Added in Node 6...\n  ...\n  725              getMaxListeners(): number;\n  726              listeners(event: string | symbol): Function[];\n  727:             emit(event: string | symbol, ...args: any[]): boolean;\n  728              eventNames(): (string | symbol)[];\n  729              listenerCount(type: string | symbol): number;\n  ...\n 1018          addListener(event: \"online\", listener: () => void): this;\n 1019  \n 1020:         emit(event: string | symbol, ...args: any[]): boolean;\n 1021:         emit(event: \"disconnect\", listener: () => void): boolean\n 1022:         emit(event: \"error\", listener: (error: Error) => void): boolean\n 1023:         emit(event: \"exit\", listener: (code: number, signal: string) => void): boolean\n 1024:         emit(event: \"listening\", listener: (address: Address) => void): boolean\n 1025:         emit(event: \"message\", listener: (message: any, handle: net.Socket | net.Server) => void): boolean\n 1026:         emit(event: \"online\", listener: () => void): boolean\n 1027  \n 1028          on(event: string, listener: Function): this;\n ....\n 1092          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1093  \n 1094:         emit(event: string | symbol, ...args: any[]): boolean;\n 1095:         emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1096:         emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1097:         emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1098:         emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1099:         emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1100:         emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1101:         emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1102  \n 1103          on(event: string, listener: Function): this;\n ....\n 1170      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1171  \n 1172:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1173:     export function emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1174:     export function emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1175:     export function emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1176:     export function emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1177:     export function emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1178:     export function emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1179:     export function emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1180  \n 1181      export function on(event: string, listener: Function): Cluster;\n ....\n 1565          addListener(event: \"reset\", listener: Function): this;\n 1566  \n 1567:         emit(event: string | symbol, ...args: any[]): boolean;\n 1568:         emit(event: \"exit\"): boolean;\n 1569:         emit(event: \"reset\", context: any): boolean;\n 1570  \n 1571          on(event: string, listener: Function): this;\n ....\n 1630          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1631  \n 1632:         emit(event: string | symbol, ...args: any[]): boolean;\n 1633:         emit(event: \"close\"): boolean;\n 1634:         emit(event: \"line\", input: any): boolean;\n 1635:         emit(event: \"pause\"): boolean;\n 1636:         emit(event: \"resume\"): boolean;\n 1637:         emit(event: \"SIGCONT\"): boolean;\n 1638:         emit(event: \"SIGINT\"): boolean;\n 1639:         emit(event: \"SIGTSTP\"): boolean;\n 1640  \n 1641          on(event: string, listener: Function): this;\n ....\n 1770          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 1771  \n 1772:         emit(event: string | symbol, ...args: any[]): boolean;\n 1773:         emit(event: \"close\", code: number, signal: string): boolean;\n 1774:         emit(event: \"disconnect\"): boolean;\n 1775:         emit(event: \"error\", err: Error): boolean;\n 1776:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1777:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 1778  \n 1779          on(event: string, listener: Function): this;\n ....\n 2221          addListener(event: \"timeout\", listener: () => void): this;\n 2222  \n 2223:         emit(event: string | symbol, ...args: any[]): boolean;\n 2224:         emit(event: \"close\", had_error: boolean): boolean;\n 2225:         emit(event: \"connect\"): boolean;\n 2226:         emit(event: \"data\", data: Buffer): boolean;\n 2227:         emit(event: \"drain\"): boolean;\n 2228:         emit(event: \"end\"): boolean;\n 2229:         emit(event: \"error\", err: Error): boolean;\n 2230:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2231:         emit(event: \"timeout\"): boolean;\n 2232  \n 2233          on(event: string, listener: Function): this;\n ....\n 2315          addListener(event: \"listening\", listener: () => void): this;\n 2316  \n 2317:         emit(event: string | symbol, ...args: any[]): boolean;\n 2318:         emit(event: \"close\"): boolean;\n 2319:         emit(event: \"connection\", socket: Socket): boolean;\n 2320:         emit(event: \"error\", err: Error): boolean;\n 2321:         emit(event: \"listening\"): boolean;\n 2322  \n 2323          on(event: string, listener: Function): this;\n ....\n 2416          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2417  \n 2418:         emit(event: string | symbol, ...args: any[]): boolean;\n 2419:         emit(event: \"close\"): boolean;\n 2420:         emit(event: \"error\", err: Error): boolean;\n 2421:         emit(event: \"listening\"): boolean;\n 2422:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2423  \n 2424          on(event: string, listener: Function): this;\n ....\n 3369          addListener(event: \"secureConnect\", listener: () => void): this;\n 3370  \n 3371:         emit(event: string | symbol, ...args: any[]): boolean;\n 3372:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 3373:         emit(event: \"secureConnect\"): boolean;\n 3374  \n 3375          on(event: string, listener: Function): this;\n ....\n 3462          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 3463  \n 3464:         emit(event: string | symbol, ...args: any[]): boolean;\n 3465:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 3466:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 3467:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 3468:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 3469:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 3470  \n 3471          on(event: string, listener: Function): this;\n ....\n 3745              addListener(event: \"error\", listener: (err: Error) => void): this;\n 3746  \n 3747:             emit(event: string | symbol, ...args: any[]): boolean;\n 3748:             emit(event: \"close\"): boolean;\n 3749:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 3750:             emit(event: \"end\"): boolean;\n 3751:             emit(event: \"readable\"): boolean;\n 3752:             emit(event: \"error\", err: Error): boolean;\n 3753  \n 3754              on(event: string, listener: Function): this;\n ....\n 3825              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 3826  \n 3827:             emit(event: string | symbol, ...args: any[]): boolean;\n 3828:             emit(event: \"close\"): boolean;\n 3829:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 3830:             emit(event: \"error\", err: Error): boolean;\n 3831:             emit(event: \"finish\"): boolean;\n 3832:             emit(event: \"pipe\", src: Readable): boolean;\n 3833:             emit(event: \"unpipe\", src: Readable): boolean;\n 3834  \n 3835              on(event: string, listener: Function): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\rxjs\\internal\\operators\\sequenceEqual.d.ts:\n   79      _complete(): void;\n   80      checkValues(): void;\n   81:     emit(value: boolean): void;\n   82      nextB(value: T): void;\n   83      completeB(): void;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\rxjs\\src\\internal\\operators\\sequenceEqual.ts:\n   96    protected _next(value: T): void {\n   97      if (this._oneComplete && this._b.length === 0) {\n   98:       this.emit(false);\n   99      } else {\n  100        this._a.push(value);\n  ...\n  105    public _complete(): void {\n  106      if (this._oneComplete) {\n  107:       this.emit(this._a.length === 0 && this._b.length === 0);\n  108      } else {\n  109        this._oneComplete = true;\n  ...\n  127        }\n  128        if (!areEqual) {\n  129:         this.emit(false);\n  130        }\n  131      }\n  132    }\n  133  \n  134:   emit(value: boolean) {\n  135      const { destination } = this;\n  136      destination.next(value);\n  ...\n  140    nextB(value: T) {\n  141      if (this._oneComplete && this._a.length === 0) {\n  142:       this.emit(false);\n  143      } else {\n  144        this._b.push(value);\n  ...\n  149    completeB() {\n  150      if (this._oneComplete) {\n  151:       this.emit(this._a.length === 0 && this._b.length === 0);\n  152      } else {\n  153        this._oneComplete = true;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\typescript\\lib\\tsserverlibrary.d.ts:\n 1799           * will be invoked when writing the JavaScript and declaration files.\n 1800           */\n 1801:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1802          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1803          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4286           * in that order would be used to write the files\n 4287           */\n 4288:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4289          /**\n 4290           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\typescript\\lib\\typescript.d.ts:\n 1799           * will be invoked when writing the JavaScript and declaration files.\n 1800           */\n 1801:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1802          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1803          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4286           * in that order would be used to write the files\n 4287           */\n 4288:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4289          /**\n 4290           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_ExerciseLectureApp\\node_modules\\typescript\\lib\\typescriptServices.d.ts:\n 1799           * will be invoked when writing the JavaScript and declaration files.\n 1800           */\n 1801:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1802          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1803          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4286           * in that order would be used to write the files\n 4287           */\n 4288:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4289          /**\n 4290           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@angular\\compiler-cli\\src\\ngtools_api2.d.ts:\n  106      loadNgStructureAsync(): Promise<void>;\n  107      listLazyRoutes(entryRoute?: string): LazyRoute[];\n  108:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback }: {\n  109          emitFlags?: EmitFlags;\n  110          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@angular\\compiler-cli\\src\\ngtsc\\program.d.ts:\n   37      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   38      private ensureAnalyzed;\n   39:     emit(opts?: {\n   40          emitFlags?: api.EmitFlags;\n   41          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@angular\\compiler-cli\\src\\transformers\\api.d.ts:\n  243       * Angular structural information is required to emit files.\n  244       */\n  245:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback, mergeEmitResultsCallback }?: {\n  246          emitFlags?: EmitFlags;\n  247          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@angular\\compiler-cli\\src\\transformers\\tsc_pass_through.d.ts:\n   33      getEmittedGeneratedFiles(): Map<string, GeneratedFile>;\n   34      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   35:     emit(opts?: {\n   36          emitFlags?: api.EmitFlags;\n   37          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@angular\\core\\src\\event_emitter.d.ts:\n   36   *     this.visible = !this.visible;\n   37   *     if (this.visible) {\n   38:  *       this.open.emit(null);\n   39   *     } else {\n   40:  *       this.close.emit(null);\n   41   *     }\n   42   *   }\n   ..\n   77       * @param value The value to emit.\n   78       */\n   79:     emit(value?: T): void;\n   80      /**\n   81       * Registers handlers for events emitted by this instance.\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@types\\node\\index.d.ts:\n  416          getMaxListeners(): number;\n  417          listeners(event: string | symbol): Function[];\n  418:         emit(event: string | symbol, ...args: any[]): boolean;\n  419          listenerCount(type: string | symbol): number;\n  420          // Added in Node 6...\n  ...\n  644          addListener(event: \"removeListener\", listener: RemoveListenerListener): this;\n  645  \n  646:         emit(event: \"beforeExit\", code: number): boolean;\n  647:         emit(event: \"disconnect\"): boolean;\n  648:         emit(event: \"exit\", code: number): boolean;\n  649:         emit(event: \"rejectionHandled\", promise: Promise<any>): boolean;\n  650:         emit(event: \"uncaughtException\", error: Error): boolean;\n  651:         emit(event: \"unhandledRejection\", reason: any, promise: Promise<any>): boolean;\n  652:         emit(event: \"warning\", warning: Error): boolean;\n  653:         emit(event: \"message\", message: any, sendHandle: any): this;\n  654:         emit(event: Signals): boolean;\n  655:         emit(event: \"newListener\", eventName: string | symbol, listener: (...args: any[]) => void): this;\n  656:         emit(event: \"removeListener\", eventName: string, listener: (...args: any[]) => void): this;\n  657  \n  658          on(event: \"beforeExit\", listener: BeforeExitListener): this;\n  ...\n  917              getMaxListeners(): number;\n  918              listeners(event: string | symbol): Function[];\n  919:             emit(event: string | symbol, ...args: any[]): boolean;\n  920              eventNames(): Array<string | symbol>;\n  921              listenerCount(type: string | symbol): number;\n  ...\n 1217          addListener(event: \"online\", listener: () => void): this;\n 1218  \n 1219:         emit(event: string | symbol, ...args: any[]): boolean;\n 1220:         emit(event: \"disconnect\"): boolean;\n 1221:         emit(event: \"error\", error: Error): boolean;\n 1222:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1223:         emit(event: \"listening\", address: Address): boolean;\n 1224:         emit(event: \"message\", message: any, handle: net.Socket | net.Server): boolean;\n 1225:         emit(event: \"online\"): boolean;\n 1226  \n 1227          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1291          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1292  \n 1293:         emit(event: string | symbol, ...args: any[]): boolean;\n 1294:         emit(event: \"disconnect\", worker: Worker): boolean;\n 1295:         emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1296:         emit(event: \"fork\", worker: Worker): boolean;\n 1297:         emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1298:         emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1299:         emit(event: \"online\", worker: Worker): boolean;\n 1300:         emit(event: \"setup\", settings: any): boolean;\n 1301  \n 1302          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1368      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1369  \n 1370:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1371:     export function emit(event: \"disconnect\", worker: Worker): boolean;\n 1372:     export function emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1373:     export function emit(event: \"fork\", worker: Worker): boolean;\n 1374:     export function emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1375:     export function emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1376:     export function emit(event: \"online\", worker: Worker): boolean;\n 1377:     export function emit(event: \"setup\", settings: any): boolean;\n 1378  \n 1379      export function on(event: string, listener: (...args: any[]) => void): Cluster;\n ....\n 1823          addListener(event: \"reset\", listener: (...args: any[]) => void): this;\n 1824  \n 1825:         emit(event: string | symbol, ...args: any[]): boolean;\n 1826:         emit(event: \"exit\"): boolean;\n 1827:         emit(event: \"reset\", context: any): boolean;\n 1828  \n 1829          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1894          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1895  \n 1896:         emit(event: string | symbol, ...args: any[]): boolean;\n 1897:         emit(event: \"close\"): boolean;\n 1898:         emit(event: \"line\", input: any): boolean;\n 1899:         emit(event: \"pause\"): boolean;\n 1900:         emit(event: \"resume\"): boolean;\n 1901:         emit(event: \"SIGCONT\"): boolean;\n 1902:         emit(event: \"SIGINT\"): boolean;\n 1903:         emit(event: \"SIGTSTP\"): boolean;\n 1904  \n 1905          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2032          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 2033  \n 2034:         emit(event: string | symbol, ...args: any[]): boolean;\n 2035:         emit(event: \"close\", code: number, signal: string): boolean;\n 2036:         emit(event: \"disconnect\"): boolean;\n 2037:         emit(event: \"error\", err: Error): boolean;\n 2038:         emit(event: \"exit\", code: number, signal: string): boolean;\n 2039:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 2040  \n 2041          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2654          addListener(event: \"timeout\", listener: () => void): this;\n 2655  \n 2656:         emit(event: string | symbol, ...args: any[]): boolean;\n 2657:         emit(event: \"close\", had_error: boolean): boolean;\n 2658:         emit(event: \"connect\"): boolean;\n 2659:         emit(event: \"data\", data: Buffer): boolean;\n 2660:         emit(event: \"drain\"): boolean;\n 2661:         emit(event: \"end\"): boolean;\n 2662:         emit(event: \"error\", err: Error): boolean;\n 2663:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2664:         emit(event: \"timeout\"): boolean;\n 2665  \n 2666          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2749          addListener(event: \"listening\", listener: () => void): this;\n 2750  \n 2751:         emit(event: string | symbol, ...args: any[]): boolean;\n 2752:         emit(event: \"close\"): boolean;\n 2753:         emit(event: \"connection\", socket: Socket): boolean;\n 2754:         emit(event: \"error\", err: Error): boolean;\n 2755:         emit(event: \"listening\"): boolean;\n 2756  \n 2757          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2874          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2875  \n 2876:         emit(event: string | symbol, ...args: any[]): boolean;\n 2877:         emit(event: \"close\"): boolean;\n 2878:         emit(event: \"error\", err: Error): boolean;\n 2879:         emit(event: \"listening\"): boolean;\n 2880:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2881  \n 2882          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 4930          addListener(event: \"secureConnect\", listener: () => void): this;\n 4931  \n 4932:         emit(event: string | symbol, ...args: any[]): boolean;\n 4933:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 4934:         emit(event: \"secureConnect\"): boolean;\n 4935  \n 4936          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5000          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 5001  \n 5002:         emit(event: string | symbol, ...args: any[]): boolean;\n 5003:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 5004:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 5005:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 5006:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 5007:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 5008  \n 5009          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5309              addListener(event: \"error\", listener: (err: Error) => void): this;\n 5310  \n 5311:             emit(event: string | symbol, ...args: any[]): boolean;\n 5312:             emit(event: \"close\"): boolean;\n 5313:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 5314:             emit(event: \"end\"): boolean;\n 5315:             emit(event: \"readable\"): boolean;\n 5316:             emit(event: \"error\", err: Error): boolean;\n 5317  \n 5318              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5397              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 5398  \n 5399:             emit(event: string | symbol, ...args: any[]): boolean;\n 5400:             emit(event: \"close\"): boolean;\n 5401:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 5402:             emit(event: \"error\", err: Error): boolean;\n 5403:             emit(event: \"finish\"): boolean;\n 5404:             emit(event: \"pipe\", src: Readable): boolean;\n 5405:             emit(event: \"unpipe\", src: Readable): boolean;\n 5406  \n 5407              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6174          addListener(event: \"trailers\", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;\n 6175  \n 6176:         emit(event: string | symbol, ...args: any[]): boolean;\n 6177:         emit(event: \"aborted\"): boolean;\n 6178:         emit(event: \"close\"): boolean;\n 6179:         emit(event: \"data\", chunk: Buffer | string): boolean;\n 6180:         emit(event: \"drain\"): boolean;\n 6181:         emit(event: \"end\"): boolean;\n 6182:         emit(event: \"error\", err: Error): boolean;\n 6183:         emit(event: \"finish\"): boolean;\n 6184:         emit(event: \"frameError\", frameType: number, errorCode: number): boolean;\n 6185:         emit(event: \"pipe\", src: stream.Readable): boolean;\n 6186:         emit(event: \"unpipe\", src: stream.Readable): boolean;\n 6187:         emit(event: \"streamClosed\", code: number): boolean;\n 6188:         emit(event: \"timeout\"): boolean;\n 6189:         emit(event: \"trailers\", trailers: IncomingHttpHeaders, flags: number): boolean;\n 6190  \n 6191          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6256          addListener(event: \"response\", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;\n 6257  \n 6258:         emit(event: string | symbol, ...args: any[]): boolean;\n 6259:         emit(event: \"headers\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6260:         emit(event: \"push\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6261:         emit(event: \"response\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6262  \n 6263          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6357          addListener(event: \"timeout\", listener: () => void): this;\n 6358  \n 6359:         emit(event: string | symbol, ...args: any[]): boolean;\n 6360:         emit(event: \"close\"): boolean;\n 6361:         emit(event: \"error\", err: Error): boolean;\n 6362:         emit(event: \"frameError\", frameType: number, errorCode: number, streamID: number): boolean;\n 6363:         emit(event: \"goaway\", errorCode: number, lastStreamID: number, opaqueData: Buffer): boolean;\n 6364:         emit(event: \"localSettings\", settings: Settings): boolean;\n 6365:         emit(event: \"remoteSettings\", settings: Settings): boolean;\n 6366:         emit(event: \"socketError\", err: Error): boolean;\n 6367:         emit(event: \"timeout\"): boolean;\n 6368  \n 6369          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6415          addListener(event: \"stream\", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6416  \n 6417:         emit(event: string | symbol, ...args: any[]): boolean;\n 6418:         emit(event: \"connect\", session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6419:         emit(event: \"stream\", stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6420  \n 6421          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6443          addListener(event: \"stream\", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6444  \n 6445:         emit(event: string | symbol, ...args: any[]): boolean;\n 6446:         emit(event: \"connect\", session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6447:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6448  \n 6449          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6498          addListener(event: \"timeout\", listener: () => void): this;\n 6499  \n 6500:         emit(event: string | symbol, ...args: any[]): boolean;\n 6501:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6502:         emit(event: \"sessionError\", err: Error): boolean;\n 6503:         emit(event: \"socketError\", err: Error): boolean;\n 6504:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6505:         emit(event: \"timeout\"): boolean;\n 6506  \n 6507          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6543          addListener(event: \"unknownProtocol\", listener: (socket: tls.TLSSocket) => void): this;\n 6544  \n 6545:         emit(event: string | symbol, ...args: any[]): boolean;\n 6546:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6547:         emit(event: \"sessionError\", err: Error): boolean;\n 6548:         emit(event: \"socketError\", err: Error): boolean;\n 6549:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6550:         emit(event: \"timeout\"): boolean;\n 6551:         emit(event: \"unknownProtocol\", socket: tls.TLSSocket): boolean;\n 6552  \n 6553          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6599          addListener(event: \"aborted\", listener: (hadError: boolean, code: number) => void): this;\n 6600  \n 6601:         emit(event: string | symbol, ...args: any[]): boolean;\n 6602:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6603  \n 6604          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6649          addListener(event: \"finish\", listener: () => void): this;\n 6650  \n 6651:         emit(event: string | symbol, ...args: any[]): boolean;\n 6652:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6653:         emit(event: \"close\"): boolean;\n 6654:         emit(event: \"drain\"): boolean;\n 6655:         emit(event: \"error\", error: Error): boolean;\n 6656:         emit(event: \"finish\"): boolean;\n 6657  \n 6658          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@types\\node\\inspector.d.ts:\n 2074          addListener(event: \"HeapProfiler.heapStatsUpdate\", listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;\n 2075  \n 2076:         emit(event: string | symbol, ...args: any[]): boolean;\n 2077:         emit(event: \"inspectorNotification\", message: InspectorNotification<{}>): boolean;\n 2078:         emit(event: \"Runtime.executionContextCreated\", message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>): boolean;\n 2079:         emit(event: \"Runtime.executionContextDestroyed\", message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>): boolean;\n 2080:         emit(event: \"Runtime.executionContextsCleared\"): boolean;\n 2081:         emit(event: \"Runtime.exceptionThrown\", message: InspectorNotification<Runtime.ExceptionThrownEventDataType>): boolean;\n 2082:         emit(event: \"Runtime.exceptionRevoked\", message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>): boolean;\n 2083:         emit(event: \"Runtime.consoleAPICalled\", message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>): boolean;\n 2084:         emit(event: \"Runtime.inspectRequested\", message: InspectorNotification<Runtime.InspectRequestedEventDataType>): boolean;\n 2085:         emit(event: \"Debugger.scriptParsed\", message: InspectorNotification<Debugger.ScriptParsedEventDataType>): boolean;\n 2086:         emit(event: \"Debugger.scriptFailedToParse\", message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>): boolean;\n 2087:         emit(event: \"Debugger.breakpointResolved\", message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>): boolean;\n 2088:         emit(event: \"Debugger.paused\", message: InspectorNotification<Debugger.PausedEventDataType>): boolean;\n 2089:         emit(event: \"Debugger.resumed\"): boolean;\n 2090:         emit(event: \"Console.messageAdded\", message: InspectorNotification<Console.MessageAddedEventDataType>): boolean;\n 2091:         emit(event: \"Profiler.consoleProfileStarted\", message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>): boolean;\n 2092:         emit(event: \"Profiler.consoleProfileFinished\", message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>): boolean;\n 2093:         emit(event: \"HeapProfiler.addHeapSnapshotChunk\", message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>): boolean;\n 2094:         emit(event: \"HeapProfiler.resetProfiles\"): boolean;\n 2095:         emit(event: \"HeapProfiler.reportHeapSnapshotProgress\", message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>): boolean;\n 2096:         emit(event: \"HeapProfiler.lastSeenObjectId\", message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>): boolean;\n 2097:         emit(event: \"HeapProfiler.heapStatsUpdate\", message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>): boolean;\n 2098  \n 2099          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\@types\\selenium-webdriver\\index.d.ts:\n 2971     * @param {...*} var_args Any arguments to pass to each listener.\n 2972     */\n 2973:   emit(type: string, ...var_args: any[]): void;\n 2974  \n 2975    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\eventemitter3\\index.d.ts:\n   25     * Calls each of the listeners registered for a given event.\n   26     */\n   27:   emit(event: EventTypes, ...args: Array<any>): boolean;\n   28  \n   29    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\protractor\\node_modules\\@types\\node\\index.d.ts:\n  375          getMaxListeners(): number;\n  376          listeners(event: string | symbol): Function[];\n  377:         emit(event: string | symbol, ...args: any[]): boolean;\n  378          listenerCount(type: string | symbol): number;\n  379          // Added in Node 6...\n  ...\n  725              getMaxListeners(): number;\n  726              listeners(event: string | symbol): Function[];\n  727:             emit(event: string | symbol, ...args: any[]): boolean;\n  728              eventNames(): (string | symbol)[];\n  729              listenerCount(type: string | symbol): number;\n  ...\n 1018          addListener(event: \"online\", listener: () => void): this;\n 1019  \n 1020:         emit(event: string | symbol, ...args: any[]): boolean;\n 1021:         emit(event: \"disconnect\", listener: () => void): boolean\n 1022:         emit(event: \"error\", listener: (error: Error) => void): boolean\n 1023:         emit(event: \"exit\", listener: (code: number, signal: string) => void): boolean\n 1024:         emit(event: \"listening\", listener: (address: Address) => void): boolean\n 1025:         emit(event: \"message\", listener: (message: any, handle: net.Socket | net.Server) => void): boolean\n 1026:         emit(event: \"online\", listener: () => void): boolean\n 1027  \n 1028          on(event: string, listener: Function): this;\n ....\n 1092          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1093  \n 1094:         emit(event: string | symbol, ...args: any[]): boolean;\n 1095:         emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1096:         emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1097:         emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1098:         emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1099:         emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1100:         emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1101:         emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1102  \n 1103          on(event: string, listener: Function): this;\n ....\n 1170      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1171  \n 1172:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1173:     export function emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1174:     export function emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1175:     export function emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1176:     export function emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1177:     export function emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1178:     export function emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1179:     export function emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1180  \n 1181      export function on(event: string, listener: Function): Cluster;\n ....\n 1565          addListener(event: \"reset\", listener: Function): this;\n 1566  \n 1567:         emit(event: string | symbol, ...args: any[]): boolean;\n 1568:         emit(event: \"exit\"): boolean;\n 1569:         emit(event: \"reset\", context: any): boolean;\n 1570  \n 1571          on(event: string, listener: Function): this;\n ....\n 1630          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1631  \n 1632:         emit(event: string | symbol, ...args: any[]): boolean;\n 1633:         emit(event: \"close\"): boolean;\n 1634:         emit(event: \"line\", input: any): boolean;\n 1635:         emit(event: \"pause\"): boolean;\n 1636:         emit(event: \"resume\"): boolean;\n 1637:         emit(event: \"SIGCONT\"): boolean;\n 1638:         emit(event: \"SIGINT\"): boolean;\n 1639:         emit(event: \"SIGTSTP\"): boolean;\n 1640  \n 1641          on(event: string, listener: Function): this;\n ....\n 1770          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 1771  \n 1772:         emit(event: string | symbol, ...args: any[]): boolean;\n 1773:         emit(event: \"close\", code: number, signal: string): boolean;\n 1774:         emit(event: \"disconnect\"): boolean;\n 1775:         emit(event: \"error\", err: Error): boolean;\n 1776:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1777:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 1778  \n 1779          on(event: string, listener: Function): this;\n ....\n 2221          addListener(event: \"timeout\", listener: () => void): this;\n 2222  \n 2223:         emit(event: string | symbol, ...args: any[]): boolean;\n 2224:         emit(event: \"close\", had_error: boolean): boolean;\n 2225:         emit(event: \"connect\"): boolean;\n 2226:         emit(event: \"data\", data: Buffer): boolean;\n 2227:         emit(event: \"drain\"): boolean;\n 2228:         emit(event: \"end\"): boolean;\n 2229:         emit(event: \"error\", err: Error): boolean;\n 2230:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2231:         emit(event: \"timeout\"): boolean;\n 2232  \n 2233          on(event: string, listener: Function): this;\n ....\n 2315          addListener(event: \"listening\", listener: () => void): this;\n 2316  \n 2317:         emit(event: string | symbol, ...args: any[]): boolean;\n 2318:         emit(event: \"close\"): boolean;\n 2319:         emit(event: \"connection\", socket: Socket): boolean;\n 2320:         emit(event: \"error\", err: Error): boolean;\n 2321:         emit(event: \"listening\"): boolean;\n 2322  \n 2323          on(event: string, listener: Function): this;\n ....\n 2416          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2417  \n 2418:         emit(event: string | symbol, ...args: any[]): boolean;\n 2419:         emit(event: \"close\"): boolean;\n 2420:         emit(event: \"error\", err: Error): boolean;\n 2421:         emit(event: \"listening\"): boolean;\n 2422:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2423  \n 2424          on(event: string, listener: Function): this;\n ....\n 3369          addListener(event: \"secureConnect\", listener: () => void): this;\n 3370  \n 3371:         emit(event: string | symbol, ...args: any[]): boolean;\n 3372:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 3373:         emit(event: \"secureConnect\"): boolean;\n 3374  \n 3375          on(event: string, listener: Function): this;\n ....\n 3462          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 3463  \n 3464:         emit(event: string | symbol, ...args: any[]): boolean;\n 3465:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 3466:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 3467:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 3468:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 3469:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 3470  \n 3471          on(event: string, listener: Function): this;\n ....\n 3745              addListener(event: \"error\", listener: (err: Error) => void): this;\n 3746  \n 3747:             emit(event: string | symbol, ...args: any[]): boolean;\n 3748:             emit(event: \"close\"): boolean;\n 3749:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 3750:             emit(event: \"end\"): boolean;\n 3751:             emit(event: \"readable\"): boolean;\n 3752:             emit(event: \"error\", err: Error): boolean;\n 3753  \n 3754              on(event: string, listener: Function): this;\n ....\n 3825              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 3826  \n 3827:             emit(event: string | symbol, ...args: any[]): boolean;\n 3828:             emit(event: \"close\"): boolean;\n 3829:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 3830:             emit(event: \"error\", err: Error): boolean;\n 3831:             emit(event: \"finish\"): boolean;\n 3832:             emit(event: \"pipe\", src: Readable): boolean;\n 3833:             emit(event: \"unpipe\", src: Readable): boolean;\n 3834  \n 3835              on(event: string, listener: Function): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\rxjs\\internal\\operators\\sequenceEqual.d.ts:\n   79      _complete(): void;\n   80      checkValues(): void;\n   81:     emit(value: boolean): void;\n   82      nextB(value: T): void;\n   83      completeB(): void;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\rxjs\\src\\internal\\operators\\sequenceEqual.ts:\n   96    protected _next(value: T): void {\n   97      if (this._oneComplete && this._b.length === 0) {\n   98:       this.emit(false);\n   99      } else {\n  100        this._a.push(value);\n  ...\n  105    public _complete(): void {\n  106      if (this._oneComplete) {\n  107:       this.emit(this._a.length === 0 && this._b.length === 0);\n  108      } else {\n  109        this._oneComplete = true;\n  ...\n  127        }\n  128        if (!areEqual) {\n  129:         this.emit(false);\n  130        }\n  131      }\n  132    }\n  133  \n  134:   emit(value: boolean) {\n  135      const { destination } = this;\n  136      destination.next(value);\n  ...\n  140    nextB(value: T) {\n  141      if (this._oneComplete && this._a.length === 0) {\n  142:       this.emit(false);\n  143      } else {\n  144        this._b.push(value);\n  ...\n  149    completeB() {\n  150      if (this._oneComplete) {\n  151:       this.emit(this._a.length === 0 && this._b.length === 0);\n  152      } else {\n  153        this._oneComplete = true;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\typescript\\lib\\tsserverlibrary.d.ts:\n 1799           * will be invoked when writing the JavaScript and declaration files.\n 1800           */\n 1801:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1802          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1803          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4286           * in that order would be used to write the files\n 4287           */\n 4288:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4289          /**\n 4290           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\typescript\\lib\\typescript.d.ts:\n 1799           * will be invoked when writing the JavaScript and declaration files.\n 1800           */\n 1801:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1802          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1803          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4286           * in that order would be used to write the files\n 4287           */\n 4288:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4289          /**\n 4290           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\node_modules\\typescript\\lib\\typescriptServices.d.ts:\n 1799           * will be invoked when writing the JavaScript and declaration files.\n 1800           */\n 1801:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1802          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1803          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4286           * in that order would be used to write the files\n 4287           */\n 4288:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4289          /**\n 4290           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular-devkit\\build-optimizer\\node_modules\\typescript\\lib\\tsserverlibrary.d.ts:\n 1736           * will be invoked when writing the JavaScript and declaration files.\n 1737           */\n 1738:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1739          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1740          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4127           * in that order would be used to write the files\n 4128           */\n 4129:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4130          /**\n 4131           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular-devkit\\build-optimizer\\node_modules\\typescript\\lib\\typescript.d.ts:\n 1736           * will be invoked when writing the JavaScript and declaration files.\n 1737           */\n 1738:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1739          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1740          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4127           * in that order would be used to write the files\n 4128           */\n 4129:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4130          /**\n 4131           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular-devkit\\build-optimizer\\node_modules\\typescript\\lib\\typescriptServices.d.ts:\n 1736           * will be invoked when writing the JavaScript and declaration files.\n 1737           */\n 1738:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1739          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1740          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4127           * in that order would be used to write the files\n 4128           */\n 4129:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4130          /**\n 4131           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular\\compiler-cli\\src\\ngtools_api2.d.ts:\n  106      loadNgStructureAsync(): Promise<void>;\n  107      listLazyRoutes(entryRoute?: string): LazyRoute[];\n  108:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback }: {\n  109          emitFlags?: EmitFlags;\n  110          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular\\compiler-cli\\src\\ngtsc\\program.d.ts:\n   32      getEmittedGeneratedFiles(): Map<string, GeneratedFile>;\n   33      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   34:     emit(opts?: {\n   35          emitFlags?: api.EmitFlags;\n   36          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular\\compiler-cli\\src\\transformers\\api.d.ts:\n  243       * Angular structural information is required to emit files.\n  244       */\n  245:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback, mergeEmitResultsCallback }?: {\n  246          emitFlags?: EmitFlags;\n  247          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular\\compiler-cli\\src\\transformers\\tsc_pass_through.d.ts:\n   33      getEmittedGeneratedFiles(): Map<string, GeneratedFile>;\n   34      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   35:     emit(opts?: {\n   36          emitFlags?: api.EmitFlags;\n   37          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@angular\\core\\src\\event_emitter.d.ts:\n   36   *     this.visible = !this.visible;\n   37   *     if (this.visible) {\n   38:  *       this.open.emit(null);\n   39   *     } else {\n   40:  *       this.close.emit(null);\n   41   *     }\n   42   *   }\n   ..\n   76       * @param value The value to emit.\n   77       */\n   78:     emit(value?: T): void;\n   79      /**\n   80       * Registers handlers for events emitted by this instance.\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@ngtools\\webpack\\src\\angular_compiler_plugin.d.ts:\n  105      getDependencies(fileName: string): string[];\n  106      getResourceDependencies(fileName: string): string[];\n  107:     private _emit(sourceFiles);\n  108      private _validateLocale(locale);\n  109  }\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@types\\node\\index.d.ts:\n  416          getMaxListeners(): number;\n  417          listeners(event: string | symbol): Function[];\n  418:         emit(event: string | symbol, ...args: any[]): boolean;\n  419          listenerCount(type: string | symbol): number;\n  420          // Added in Node 6...\n  ...\n  644          addListener(event: \"removeListener\", listener: RemoveListenerListener): this;\n  645  \n  646:         emit(event: \"beforeExit\", code: number): boolean;\n  647:         emit(event: \"disconnect\"): boolean;\n  648:         emit(event: \"exit\", code: number): boolean;\n  649:         emit(event: \"rejectionHandled\", promise: Promise<any>): boolean;\n  650:         emit(event: \"uncaughtException\", error: Error): boolean;\n  651:         emit(event: \"unhandledRejection\", reason: any, promise: Promise<any>): boolean;\n  652:         emit(event: \"warning\", warning: Error): boolean;\n  653:         emit(event: \"message\", message: any, sendHandle: any): this;\n  654:         emit(event: Signals): boolean;\n  655:         emit(event: \"newListener\", eventName: string | symbol, listener: (...args: any[]) => void): this;\n  656:         emit(event: \"removeListener\", eventName: string, listener: (...args: any[]) => void): this;\n  657  \n  658          on(event: \"beforeExit\", listener: BeforeExitListener): this;\n  ...\n  917              getMaxListeners(): number;\n  918              listeners(event: string | symbol): Function[];\n  919:             emit(event: string | symbol, ...args: any[]): boolean;\n  920              eventNames(): Array<string | symbol>;\n  921              listenerCount(type: string | symbol): number;\n  ...\n 1217          addListener(event: \"online\", listener: () => void): this;\n 1218  \n 1219:         emit(event: string | symbol, ...args: any[]): boolean;\n 1220:         emit(event: \"disconnect\"): boolean;\n 1221:         emit(event: \"error\", error: Error): boolean;\n 1222:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1223:         emit(event: \"listening\", address: Address): boolean;\n 1224:         emit(event: \"message\", message: any, handle: net.Socket | net.Server): boolean;\n 1225:         emit(event: \"online\"): boolean;\n 1226  \n 1227          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1291          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1292  \n 1293:         emit(event: string | symbol, ...args: any[]): boolean;\n 1294:         emit(event: \"disconnect\", worker: Worker): boolean;\n 1295:         emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1296:         emit(event: \"fork\", worker: Worker): boolean;\n 1297:         emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1298:         emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1299:         emit(event: \"online\", worker: Worker): boolean;\n 1300:         emit(event: \"setup\", settings: any): boolean;\n 1301  \n 1302          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1368      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1369  \n 1370:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1371:     export function emit(event: \"disconnect\", worker: Worker): boolean;\n 1372:     export function emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1373:     export function emit(event: \"fork\", worker: Worker): boolean;\n 1374:     export function emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1375:     export function emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1376:     export function emit(event: \"online\", worker: Worker): boolean;\n 1377:     export function emit(event: \"setup\", settings: any): boolean;\n 1378  \n 1379      export function on(event: string, listener: (...args: any[]) => void): Cluster;\n ....\n 1823          addListener(event: \"reset\", listener: (...args: any[]) => void): this;\n 1824  \n 1825:         emit(event: string | symbol, ...args: any[]): boolean;\n 1826:         emit(event: \"exit\"): boolean;\n 1827:         emit(event: \"reset\", context: any): boolean;\n 1828  \n 1829          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1894          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1895  \n 1896:         emit(event: string | symbol, ...args: any[]): boolean;\n 1897:         emit(event: \"close\"): boolean;\n 1898:         emit(event: \"line\", input: any): boolean;\n 1899:         emit(event: \"pause\"): boolean;\n 1900:         emit(event: \"resume\"): boolean;\n 1901:         emit(event: \"SIGCONT\"): boolean;\n 1902:         emit(event: \"SIGINT\"): boolean;\n 1903:         emit(event: \"SIGTSTP\"): boolean;\n 1904  \n 1905          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2032          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 2033  \n 2034:         emit(event: string | symbol, ...args: any[]): boolean;\n 2035:         emit(event: \"close\", code: number, signal: string): boolean;\n 2036:         emit(event: \"disconnect\"): boolean;\n 2037:         emit(event: \"error\", err: Error): boolean;\n 2038:         emit(event: \"exit\", code: number, signal: string): boolean;\n 2039:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 2040  \n 2041          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2654          addListener(event: \"timeout\", listener: () => void): this;\n 2655  \n 2656:         emit(event: string | symbol, ...args: any[]): boolean;\n 2657:         emit(event: \"close\", had_error: boolean): boolean;\n 2658:         emit(event: \"connect\"): boolean;\n 2659:         emit(event: \"data\", data: Buffer): boolean;\n 2660:         emit(event: \"drain\"): boolean;\n 2661:         emit(event: \"end\"): boolean;\n 2662:         emit(event: \"error\", err: Error): boolean;\n 2663:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2664:         emit(event: \"timeout\"): boolean;\n 2665  \n 2666          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2749          addListener(event: \"listening\", listener: () => void): this;\n 2750  \n 2751:         emit(event: string | symbol, ...args: any[]): boolean;\n 2752:         emit(event: \"close\"): boolean;\n 2753:         emit(event: \"connection\", socket: Socket): boolean;\n 2754:         emit(event: \"error\", err: Error): boolean;\n 2755:         emit(event: \"listening\"): boolean;\n 2756  \n 2757          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2874          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2875  \n 2876:         emit(event: string | symbol, ...args: any[]): boolean;\n 2877:         emit(event: \"close\"): boolean;\n 2878:         emit(event: \"error\", err: Error): boolean;\n 2879:         emit(event: \"listening\"): boolean;\n 2880:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2881  \n 2882          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 4930          addListener(event: \"secureConnect\", listener: () => void): this;\n 4931  \n 4932:         emit(event: string | symbol, ...args: any[]): boolean;\n 4933:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 4934:         emit(event: \"secureConnect\"): boolean;\n 4935  \n 4936          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5000          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 5001  \n 5002:         emit(event: string | symbol, ...args: any[]): boolean;\n 5003:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 5004:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 5005:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 5006:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 5007:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 5008  \n 5009          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5309              addListener(event: \"error\", listener: (err: Error) => void): this;\n 5310  \n 5311:             emit(event: string | symbol, ...args: any[]): boolean;\n 5312:             emit(event: \"close\"): boolean;\n 5313:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 5314:             emit(event: \"end\"): boolean;\n 5315:             emit(event: \"readable\"): boolean;\n 5316:             emit(event: \"error\", err: Error): boolean;\n 5317  \n 5318              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5397              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 5398  \n 5399:             emit(event: string | symbol, ...args: any[]): boolean;\n 5400:             emit(event: \"close\"): boolean;\n 5401:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 5402:             emit(event: \"error\", err: Error): boolean;\n 5403:             emit(event: \"finish\"): boolean;\n 5404:             emit(event: \"pipe\", src: Readable): boolean;\n 5405:             emit(event: \"unpipe\", src: Readable): boolean;\n 5406  \n 5407              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6174          addListener(event: \"trailers\", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;\n 6175  \n 6176:         emit(event: string | symbol, ...args: any[]): boolean;\n 6177:         emit(event: \"aborted\"): boolean;\n 6178:         emit(event: \"close\"): boolean;\n 6179:         emit(event: \"data\", chunk: Buffer | string): boolean;\n 6180:         emit(event: \"drain\"): boolean;\n 6181:         emit(event: \"end\"): boolean;\n 6182:         emit(event: \"error\", err: Error): boolean;\n 6183:         emit(event: \"finish\"): boolean;\n 6184:         emit(event: \"frameError\", frameType: number, errorCode: number): boolean;\n 6185:         emit(event: \"pipe\", src: stream.Readable): boolean;\n 6186:         emit(event: \"unpipe\", src: stream.Readable): boolean;\n 6187:         emit(event: \"streamClosed\", code: number): boolean;\n 6188:         emit(event: \"timeout\"): boolean;\n 6189:         emit(event: \"trailers\", trailers: IncomingHttpHeaders, flags: number): boolean;\n 6190  \n 6191          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6256          addListener(event: \"response\", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;\n 6257  \n 6258:         emit(event: string | symbol, ...args: any[]): boolean;\n 6259:         emit(event: \"headers\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6260:         emit(event: \"push\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6261:         emit(event: \"response\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6262  \n 6263          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6357          addListener(event: \"timeout\", listener: () => void): this;\n 6358  \n 6359:         emit(event: string | symbol, ...args: any[]): boolean;\n 6360:         emit(event: \"close\"): boolean;\n 6361:         emit(event: \"error\", err: Error): boolean;\n 6362:         emit(event: \"frameError\", frameType: number, errorCode: number, streamID: number): boolean;\n 6363:         emit(event: \"goaway\", errorCode: number, lastStreamID: number, opaqueData: Buffer): boolean;\n 6364:         emit(event: \"localSettings\", settings: Settings): boolean;\n 6365:         emit(event: \"remoteSettings\", settings: Settings): boolean;\n 6366:         emit(event: \"socketError\", err: Error): boolean;\n 6367:         emit(event: \"timeout\"): boolean;\n 6368  \n 6369          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6415          addListener(event: \"stream\", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6416  \n 6417:         emit(event: string | symbol, ...args: any[]): boolean;\n 6418:         emit(event: \"connect\", session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6419:         emit(event: \"stream\", stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6420  \n 6421          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6443          addListener(event: \"stream\", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6444  \n 6445:         emit(event: string | symbol, ...args: any[]): boolean;\n 6446:         emit(event: \"connect\", session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6447:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6448  \n 6449          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6498          addListener(event: \"timeout\", listener: () => void): this;\n 6499  \n 6500:         emit(event: string | symbol, ...args: any[]): boolean;\n 6501:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6502:         emit(event: \"sessionError\", err: Error): boolean;\n 6503:         emit(event: \"socketError\", err: Error): boolean;\n 6504:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6505:         emit(event: \"timeout\"): boolean;\n 6506  \n 6507          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6543          addListener(event: \"unknownProtocol\", listener: (socket: tls.TLSSocket) => void): this;\n 6544  \n 6545:         emit(event: string | symbol, ...args: any[]): boolean;\n 6546:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6547:         emit(event: \"sessionError\", err: Error): boolean;\n 6548:         emit(event: \"socketError\", err: Error): boolean;\n 6549:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6550:         emit(event: \"timeout\"): boolean;\n 6551:         emit(event: \"unknownProtocol\", socket: tls.TLSSocket): boolean;\n 6552  \n 6553          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6599          addListener(event: \"aborted\", listener: (hadError: boolean, code: number) => void): this;\n 6600  \n 6601:         emit(event: string | symbol, ...args: any[]): boolean;\n 6602:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6603  \n 6604          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6649          addListener(event: \"finish\", listener: () => void): this;\n 6650  \n 6651:         emit(event: string | symbol, ...args: any[]): boolean;\n 6652:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6653:         emit(event: \"close\"): boolean;\n 6654:         emit(event: \"drain\"): boolean;\n 6655:         emit(event: \"error\", error: Error): boolean;\n 6656:         emit(event: \"finish\"): boolean;\n 6657  \n 6658          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@types\\node\\inspector.d.ts:\n 2074          addListener(event: \"HeapProfiler.heapStatsUpdate\", listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;\n 2075  \n 2076:         emit(event: string | symbol, ...args: any[]): boolean;\n 2077:         emit(event: \"inspectorNotification\", message: InspectorNotification<{}>): boolean;\n 2078:         emit(event: \"Runtime.executionContextCreated\", message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>): boolean;\n 2079:         emit(event: \"Runtime.executionContextDestroyed\", message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>): boolean;\n 2080:         emit(event: \"Runtime.executionContextsCleared\"): boolean;\n 2081:         emit(event: \"Runtime.exceptionThrown\", message: InspectorNotification<Runtime.ExceptionThrownEventDataType>): boolean;\n 2082:         emit(event: \"Runtime.exceptionRevoked\", message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>): boolean;\n 2083:         emit(event: \"Runtime.consoleAPICalled\", message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>): boolean;\n 2084:         emit(event: \"Runtime.inspectRequested\", message: InspectorNotification<Runtime.InspectRequestedEventDataType>): boolean;\n 2085:         emit(event: \"Debugger.scriptParsed\", message: InspectorNotification<Debugger.ScriptParsedEventDataType>): boolean;\n 2086:         emit(event: \"Debugger.scriptFailedToParse\", message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>): boolean;\n 2087:         emit(event: \"Debugger.breakpointResolved\", message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>): boolean;\n 2088:         emit(event: \"Debugger.paused\", message: InspectorNotification<Debugger.PausedEventDataType>): boolean;\n 2089:         emit(event: \"Debugger.resumed\"): boolean;\n 2090:         emit(event: \"Console.messageAdded\", message: InspectorNotification<Console.MessageAddedEventDataType>): boolean;\n 2091:         emit(event: \"Profiler.consoleProfileStarted\", message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>): boolean;\n 2092:         emit(event: \"Profiler.consoleProfileFinished\", message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>): boolean;\n 2093:         emit(event: \"HeapProfiler.addHeapSnapshotChunk\", message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>): boolean;\n 2094:         emit(event: \"HeapProfiler.resetProfiles\"): boolean;\n 2095:         emit(event: \"HeapProfiler.reportHeapSnapshotProgress\", message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>): boolean;\n 2096:         emit(event: \"HeapProfiler.lastSeenObjectId\", message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>): boolean;\n 2097:         emit(event: \"HeapProfiler.heapStatsUpdate\", message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>): boolean;\n 2098  \n 2099          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\@types\\selenium-webdriver\\index.d.ts:\n 3171     * @param {...*} var_args Any arguments to pass to each listener.\n 3172     */\n 3173:   emit(type: string, ...var_args: any[]): void;\n 3174  \n 3175    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\eventemitter3\\index.d.ts:\n   25     * Calls each of the listeners registered for a given event.\n   26     */\n   27:   emit(event: EventTypes, ...args: Array<any>): boolean;\n   28  \n   29    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\protractor\\node_modules\\@types\\node\\index.d.ts:\n  375          getMaxListeners(): number;\n  376          listeners(event: string | symbol): Function[];\n  377:         emit(event: string | symbol, ...args: any[]): boolean;\n  378          listenerCount(type: string | symbol): number;\n  379          // Added in Node 6...\n  ...\n  725              getMaxListeners(): number;\n  726              listeners(event: string | symbol): Function[];\n  727:             emit(event: string | symbol, ...args: any[]): boolean;\n  728              eventNames(): (string | symbol)[];\n  729              listenerCount(type: string | symbol): number;\n  ...\n 1018          addListener(event: \"online\", listener: () => void): this;\n 1019  \n 1020:         emit(event: string | symbol, ...args: any[]): boolean;\n 1021:         emit(event: \"disconnect\", listener: () => void): boolean\n 1022:         emit(event: \"error\", listener: (error: Error) => void): boolean\n 1023:         emit(event: \"exit\", listener: (code: number, signal: string) => void): boolean\n 1024:         emit(event: \"listening\", listener: (address: Address) => void): boolean\n 1025:         emit(event: \"message\", listener: (message: any, handle: net.Socket | net.Server) => void): boolean\n 1026:         emit(event: \"online\", listener: () => void): boolean\n 1027  \n 1028          on(event: string, listener: Function): this;\n ....\n 1092          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1093  \n 1094:         emit(event: string | symbol, ...args: any[]): boolean;\n 1095:         emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1096:         emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1097:         emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1098:         emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1099:         emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1100:         emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1101:         emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1102  \n 1103          on(event: string, listener: Function): this;\n ....\n 1170      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1171  \n 1172:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1173:     export function emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1174:     export function emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1175:     export function emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1176:     export function emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1177:     export function emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1178:     export function emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1179:     export function emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1180  \n 1181      export function on(event: string, listener: Function): Cluster;\n ....\n 1565          addListener(event: \"reset\", listener: Function): this;\n 1566  \n 1567:         emit(event: string | symbol, ...args: any[]): boolean;\n 1568:         emit(event: \"exit\"): boolean;\n 1569:         emit(event: \"reset\", context: any): boolean;\n 1570  \n 1571          on(event: string, listener: Function): this;\n ....\n 1630          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1631  \n 1632:         emit(event: string | symbol, ...args: any[]): boolean;\n 1633:         emit(event: \"close\"): boolean;\n 1634:         emit(event: \"line\", input: any): boolean;\n 1635:         emit(event: \"pause\"): boolean;\n 1636:         emit(event: \"resume\"): boolean;\n 1637:         emit(event: \"SIGCONT\"): boolean;\n 1638:         emit(event: \"SIGINT\"): boolean;\n 1639:         emit(event: \"SIGTSTP\"): boolean;\n 1640  \n 1641          on(event: string, listener: Function): this;\n ....\n 1770          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 1771  \n 1772:         emit(event: string | symbol, ...args: any[]): boolean;\n 1773:         emit(event: \"close\", code: number, signal: string): boolean;\n 1774:         emit(event: \"disconnect\"): boolean;\n 1775:         emit(event: \"error\", err: Error): boolean;\n 1776:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1777:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 1778  \n 1779          on(event: string, listener: Function): this;\n ....\n 2221          addListener(event: \"timeout\", listener: () => void): this;\n 2222  \n 2223:         emit(event: string | symbol, ...args: any[]): boolean;\n 2224:         emit(event: \"close\", had_error: boolean): boolean;\n 2225:         emit(event: \"connect\"): boolean;\n 2226:         emit(event: \"data\", data: Buffer): boolean;\n 2227:         emit(event: \"drain\"): boolean;\n 2228:         emit(event: \"end\"): boolean;\n 2229:         emit(event: \"error\", err: Error): boolean;\n 2230:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2231:         emit(event: \"timeout\"): boolean;\n 2232  \n 2233          on(event: string, listener: Function): this;\n ....\n 2315          addListener(event: \"listening\", listener: () => void): this;\n 2316  \n 2317:         emit(event: string | symbol, ...args: any[]): boolean;\n 2318:         emit(event: \"close\"): boolean;\n 2319:         emit(event: \"connection\", socket: Socket): boolean;\n 2320:         emit(event: \"error\", err: Error): boolean;\n 2321:         emit(event: \"listening\"): boolean;\n 2322  \n 2323          on(event: string, listener: Function): this;\n ....\n 2416          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2417  \n 2418:         emit(event: string | symbol, ...args: any[]): boolean;\n 2419:         emit(event: \"close\"): boolean;\n 2420:         emit(event: \"error\", err: Error): boolean;\n 2421:         emit(event: \"listening\"): boolean;\n 2422:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2423  \n 2424          on(event: string, listener: Function): this;\n ....\n 3369          addListener(event: \"secureConnect\", listener: () => void): this;\n 3370  \n 3371:         emit(event: string | symbol, ...args: any[]): boolean;\n 3372:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 3373:         emit(event: \"secureConnect\"): boolean;\n 3374  \n 3375          on(event: string, listener: Function): this;\n ....\n 3462          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 3463  \n 3464:         emit(event: string | symbol, ...args: any[]): boolean;\n 3465:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 3466:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 3467:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 3468:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 3469:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 3470  \n 3471          on(event: string, listener: Function): this;\n ....\n 3745              addListener(event: \"error\", listener: (err: Error) => void): this;\n 3746  \n 3747:             emit(event: string | symbol, ...args: any[]): boolean;\n 3748:             emit(event: \"close\"): boolean;\n 3749:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 3750:             emit(event: \"end\"): boolean;\n 3751:             emit(event: \"readable\"): boolean;\n 3752:             emit(event: \"error\", err: Error): boolean;\n 3753  \n 3754              on(event: string, listener: Function): this;\n ....\n 3825              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 3826  \n 3827:             emit(event: string | symbol, ...args: any[]): boolean;\n 3828:             emit(event: \"close\"): boolean;\n 3829:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 3830:             emit(event: \"error\", err: Error): boolean;\n 3831:             emit(event: \"finish\"): boolean;\n 3832:             emit(event: \"pipe\", src: Readable): boolean;\n 3833:             emit(event: \"unpipe\", src: Readable): boolean;\n 3834  \n 3835              on(event: string, listener: Function): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\rxjs\\internal\\operators\\sequenceEqual.d.ts:\n   79      _complete(): void;\n   80      checkValues(): void;\n   81:     emit(value: boolean): void;\n   82      nextB(value: T): void;\n   83      completeB(): void;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\rxjs\\src\\internal\\operators\\sequenceEqual.ts:\n   96    protected _next(value: T): void {\n   97      if (this._oneComplete && this._b.length === 0) {\n   98:       this.emit(false);\n   99      } else {\n  100        this._a.push(value);\n  ...\n  105    public _complete(): void {\n  106      if (this._oneComplete) {\n  107:       this.emit(this._a.length === 0 && this._b.length === 0);\n  108      } else {\n  109        this._oneComplete = true;\n  ...\n  127        }\n  128        if (!areEqual) {\n  129:         this.emit(false);\n  130        }\n  131      }\n  132    }\n  133  \n  134:   emit(value: boolean) {\n  135      const { destination } = this;\n  136      destination.next(value);\n  ...\n  140    nextB(value: T) {\n  141      if (this._oneComplete && this._a.length === 0) {\n  142:       this.emit(false);\n  143      } else {\n  144        this._b.push(value);\n  ...\n  149    completeB() {\n  150      if (this._oneComplete) {\n  151:       this.emit(this._a.length === 0 && this._b.length === 0);\n  152      } else {\n  153        this._oneComplete = true;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\tsickle\\src\\rewriter.d.ts:\n   70       */\n   71      writeRange(node: ts.Node, from: number, to: number): void;\n   72:     emit(str: string): void;\n   73      /** Removes comment metacharacters from a string, to make it safe to embed in a comment. */\n   74      escapeForComment(str: string): string;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\tsickle\\src\\typescript-2.4.d.ts:\n 1668           * will be invoked when writing the JavaScript and declaration files.\n 1669           */\n 1670:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1671          getOptionsDiagnostics(cancellationToken?: CancellationToken): Diagnostic[];\n 1672          getGlobalDiagnostics(cancellationToken?: CancellationToken): Diagnostic[];\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\typescript\\lib\\tsserverlibrary.d.ts:\n 1654           * will be invoked when writing the JavaScript and declaration files.\n 1655           */\n 1656:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1657          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1658          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\typescript\\lib\\typescript.d.ts:\n 1654           * will be invoked when writing the JavaScript and declaration files.\n 1655           */\n 1656:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1657          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1658          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 3932           * in that order would be used to write the files\n 3933           */\n 3934:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 3935          /**\n 3936           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\node_modules\\typescript\\lib\\typescriptServices.d.ts:\n 1654           * will be invoked when writing the JavaScript and declaration files.\n 1655           */\n 1656:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1657          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1658          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 3932           * in that order would be used to write the files\n 3933           */\n 3934:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 3935          /**\n 3936           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding-assignment-start\\src\\app\\game-control\\game-control.component.ts:\n   14  \tstartGame(){\n   15  \t\t\n   16: \t\tthis.interval = setInterval(()=>{this.tickTriggered.emit(this.counter);this.counter++;},500);\n   17  \t}\n   18  \n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular-devkit\\build-optimizer\\node_modules\\typescript\\lib\\tsserverlibrary.d.ts:\n 1736           * will be invoked when writing the JavaScript and declaration files.\n 1737           */\n 1738:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1739          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1740          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4127           * in that order would be used to write the files\n 4128           */\n 4129:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4130          /**\n 4131           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular-devkit\\build-optimizer\\node_modules\\typescript\\lib\\typescript.d.ts:\n 1736           * will be invoked when writing the JavaScript and declaration files.\n 1737           */\n 1738:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1739          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1740          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4127           * in that order would be used to write the files\n 4128           */\n 4129:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4130          /**\n 4131           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular-devkit\\build-optimizer\\node_modules\\typescript\\lib\\typescriptServices.d.ts:\n 1736           * will be invoked when writing the JavaScript and declaration files.\n 1737           */\n 1738:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1739          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1740          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 4127           * in that order would be used to write the files\n 4128           */\n 4129:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 4130          /**\n 4131           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular\\compiler-cli\\src\\ngtools_api2.d.ts:\n  106      loadNgStructureAsync(): Promise<void>;\n  107      listLazyRoutes(entryRoute?: string): LazyRoute[];\n  108:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback }: {\n  109          emitFlags?: EmitFlags;\n  110          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular\\compiler-cli\\src\\ngtsc\\program.d.ts:\n   32      getEmittedGeneratedFiles(): Map<string, GeneratedFile>;\n   33      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   34:     emit(opts?: {\n   35          emitFlags?: api.EmitFlags;\n   36          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular\\compiler-cli\\src\\transformers\\api.d.ts:\n  243       * Angular structural information is required to emit files.\n  244       */\n  245:     emit({ emitFlags, cancellationToken, customTransformers, emitCallback, mergeEmitResultsCallback }?: {\n  246          emitFlags?: EmitFlags;\n  247          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular\\compiler-cli\\src\\transformers\\tsc_pass_through.d.ts:\n   33      getEmittedGeneratedFiles(): Map<string, GeneratedFile>;\n   34      getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n   35:     emit(opts?: {\n   36          emitFlags?: api.EmitFlags;\n   37          cancellationToken?: ts.CancellationToken;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@angular\\core\\src\\event_emitter.d.ts:\n   36   *     this.visible = !this.visible;\n   37   *     if (this.visible) {\n   38:  *       this.open.emit(null);\n   39   *     } else {\n   40:  *       this.close.emit(null);\n   41   *     }\n   42   *   }\n   ..\n   76       * @param value The value to emit.\n   77       */\n   78:     emit(value?: T): void;\n   79      /**\n   80       * Registers handlers for events emitted by this instance.\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@ngtools\\webpack\\src\\angular_compiler_plugin.d.ts:\n  105      getDependencies(fileName: string): string[];\n  106      getResourceDependencies(fileName: string): string[];\n  107:     private _emit(sourceFiles);\n  108      private _validateLocale(locale);\n  109  }\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@types\\node\\index.d.ts:\n  416          getMaxListeners(): number;\n  417          listeners(event: string | symbol): Function[];\n  418:         emit(event: string | symbol, ...args: any[]): boolean;\n  419          listenerCount(type: string | symbol): number;\n  420          // Added in Node 6...\n  ...\n  644          addListener(event: \"removeListener\", listener: RemoveListenerListener): this;\n  645  \n  646:         emit(event: \"beforeExit\", code: number): boolean;\n  647:         emit(event: \"disconnect\"): boolean;\n  648:         emit(event: \"exit\", code: number): boolean;\n  649:         emit(event: \"rejectionHandled\", promise: Promise<any>): boolean;\n  650:         emit(event: \"uncaughtException\", error: Error): boolean;\n  651:         emit(event: \"unhandledRejection\", reason: any, promise: Promise<any>): boolean;\n  652:         emit(event: \"warning\", warning: Error): boolean;\n  653:         emit(event: \"message\", message: any, sendHandle: any): this;\n  654:         emit(event: Signals): boolean;\n  655:         emit(event: \"newListener\", eventName: string | symbol, listener: (...args: any[]) => void): this;\n  656:         emit(event: \"removeListener\", eventName: string, listener: (...args: any[]) => void): this;\n  657  \n  658          on(event: \"beforeExit\", listener: BeforeExitListener): this;\n  ...\n  917              getMaxListeners(): number;\n  918              listeners(event: string | symbol): Function[];\n  919:             emit(event: string | symbol, ...args: any[]): boolean;\n  920              eventNames(): Array<string | symbol>;\n  921              listenerCount(type: string | symbol): number;\n  ...\n 1217          addListener(event: \"online\", listener: () => void): this;\n 1218  \n 1219:         emit(event: string | symbol, ...args: any[]): boolean;\n 1220:         emit(event: \"disconnect\"): boolean;\n 1221:         emit(event: \"error\", error: Error): boolean;\n 1222:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1223:         emit(event: \"listening\", address: Address): boolean;\n 1224:         emit(event: \"message\", message: any, handle: net.Socket | net.Server): boolean;\n 1225:         emit(event: \"online\"): boolean;\n 1226  \n 1227          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1291          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1292  \n 1293:         emit(event: string | symbol, ...args: any[]): boolean;\n 1294:         emit(event: \"disconnect\", worker: Worker): boolean;\n 1295:         emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1296:         emit(event: \"fork\", worker: Worker): boolean;\n 1297:         emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1298:         emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1299:         emit(event: \"online\", worker: Worker): boolean;\n 1300:         emit(event: \"setup\", settings: any): boolean;\n 1301  \n 1302          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1368      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1369  \n 1370:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1371:     export function emit(event: \"disconnect\", worker: Worker): boolean;\n 1372:     export function emit(event: \"exit\", worker: Worker, code: number, signal: string): boolean;\n 1373:     export function emit(event: \"fork\", worker: Worker): boolean;\n 1374:     export function emit(event: \"listening\", worker: Worker, address: Address): boolean;\n 1375:     export function emit(event: \"message\", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;\n 1376:     export function emit(event: \"online\", worker: Worker): boolean;\n 1377:     export function emit(event: \"setup\", settings: any): boolean;\n 1378  \n 1379      export function on(event: string, listener: (...args: any[]) => void): Cluster;\n ....\n 1823          addListener(event: \"reset\", listener: (...args: any[]) => void): this;\n 1824  \n 1825:         emit(event: string | symbol, ...args: any[]): boolean;\n 1826:         emit(event: \"exit\"): boolean;\n 1827:         emit(event: \"reset\", context: any): boolean;\n 1828  \n 1829          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 1894          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1895  \n 1896:         emit(event: string | symbol, ...args: any[]): boolean;\n 1897:         emit(event: \"close\"): boolean;\n 1898:         emit(event: \"line\", input: any): boolean;\n 1899:         emit(event: \"pause\"): boolean;\n 1900:         emit(event: \"resume\"): boolean;\n 1901:         emit(event: \"SIGCONT\"): boolean;\n 1902:         emit(event: \"SIGINT\"): boolean;\n 1903:         emit(event: \"SIGTSTP\"): boolean;\n 1904  \n 1905          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2032          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 2033  \n 2034:         emit(event: string | symbol, ...args: any[]): boolean;\n 2035:         emit(event: \"close\", code: number, signal: string): boolean;\n 2036:         emit(event: \"disconnect\"): boolean;\n 2037:         emit(event: \"error\", err: Error): boolean;\n 2038:         emit(event: \"exit\", code: number, signal: string): boolean;\n 2039:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 2040  \n 2041          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2654          addListener(event: \"timeout\", listener: () => void): this;\n 2655  \n 2656:         emit(event: string | symbol, ...args: any[]): boolean;\n 2657:         emit(event: \"close\", had_error: boolean): boolean;\n 2658:         emit(event: \"connect\"): boolean;\n 2659:         emit(event: \"data\", data: Buffer): boolean;\n 2660:         emit(event: \"drain\"): boolean;\n 2661:         emit(event: \"end\"): boolean;\n 2662:         emit(event: \"error\", err: Error): boolean;\n 2663:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2664:         emit(event: \"timeout\"): boolean;\n 2665  \n 2666          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2749          addListener(event: \"listening\", listener: () => void): this;\n 2750  \n 2751:         emit(event: string | symbol, ...args: any[]): boolean;\n 2752:         emit(event: \"close\"): boolean;\n 2753:         emit(event: \"connection\", socket: Socket): boolean;\n 2754:         emit(event: \"error\", err: Error): boolean;\n 2755:         emit(event: \"listening\"): boolean;\n 2756  \n 2757          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 2874          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2875  \n 2876:         emit(event: string | symbol, ...args: any[]): boolean;\n 2877:         emit(event: \"close\"): boolean;\n 2878:         emit(event: \"error\", err: Error): boolean;\n 2879:         emit(event: \"listening\"): boolean;\n 2880:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2881  \n 2882          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 4930          addListener(event: \"secureConnect\", listener: () => void): this;\n 4931  \n 4932:         emit(event: string | symbol, ...args: any[]): boolean;\n 4933:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 4934:         emit(event: \"secureConnect\"): boolean;\n 4935  \n 4936          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5000          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 5001  \n 5002:         emit(event: string | symbol, ...args: any[]): boolean;\n 5003:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 5004:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 5005:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 5006:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 5007:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 5008  \n 5009          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5309              addListener(event: \"error\", listener: (err: Error) => void): this;\n 5310  \n 5311:             emit(event: string | symbol, ...args: any[]): boolean;\n 5312:             emit(event: \"close\"): boolean;\n 5313:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 5314:             emit(event: \"end\"): boolean;\n 5315:             emit(event: \"readable\"): boolean;\n 5316:             emit(event: \"error\", err: Error): boolean;\n 5317  \n 5318              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 5397              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 5398  \n 5399:             emit(event: string | symbol, ...args: any[]): boolean;\n 5400:             emit(event: \"close\"): boolean;\n 5401:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 5402:             emit(event: \"error\", err: Error): boolean;\n 5403:             emit(event: \"finish\"): boolean;\n 5404:             emit(event: \"pipe\", src: Readable): boolean;\n 5405:             emit(event: \"unpipe\", src: Readable): boolean;\n 5406  \n 5407              on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6174          addListener(event: \"trailers\", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;\n 6175  \n 6176:         emit(event: string | symbol, ...args: any[]): boolean;\n 6177:         emit(event: \"aborted\"): boolean;\n 6178:         emit(event: \"close\"): boolean;\n 6179:         emit(event: \"data\", chunk: Buffer | string): boolean;\n 6180:         emit(event: \"drain\"): boolean;\n 6181:         emit(event: \"end\"): boolean;\n 6182:         emit(event: \"error\", err: Error): boolean;\n 6183:         emit(event: \"finish\"): boolean;\n 6184:         emit(event: \"frameError\", frameType: number, errorCode: number): boolean;\n 6185:         emit(event: \"pipe\", src: stream.Readable): boolean;\n 6186:         emit(event: \"unpipe\", src: stream.Readable): boolean;\n 6187:         emit(event: \"streamClosed\", code: number): boolean;\n 6188:         emit(event: \"timeout\"): boolean;\n 6189:         emit(event: \"trailers\", trailers: IncomingHttpHeaders, flags: number): boolean;\n 6190  \n 6191          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6256          addListener(event: \"response\", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;\n 6257  \n 6258:         emit(event: string | symbol, ...args: any[]): boolean;\n 6259:         emit(event: \"headers\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6260:         emit(event: \"push\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6261:         emit(event: \"response\", headers: IncomingHttpHeaders, flags: number): boolean;\n 6262  \n 6263          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6357          addListener(event: \"timeout\", listener: () => void): this;\n 6358  \n 6359:         emit(event: string | symbol, ...args: any[]): boolean;\n 6360:         emit(event: \"close\"): boolean;\n 6361:         emit(event: \"error\", err: Error): boolean;\n 6362:         emit(event: \"frameError\", frameType: number, errorCode: number, streamID: number): boolean;\n 6363:         emit(event: \"goaway\", errorCode: number, lastStreamID: number, opaqueData: Buffer): boolean;\n 6364:         emit(event: \"localSettings\", settings: Settings): boolean;\n 6365:         emit(event: \"remoteSettings\", settings: Settings): boolean;\n 6366:         emit(event: \"socketError\", err: Error): boolean;\n 6367:         emit(event: \"timeout\"): boolean;\n 6368  \n 6369          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6415          addListener(event: \"stream\", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6416  \n 6417:         emit(event: string | symbol, ...args: any[]): boolean;\n 6418:         emit(event: \"connect\", session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6419:         emit(event: \"stream\", stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6420  \n 6421          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6443          addListener(event: \"stream\", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;\n 6444  \n 6445:         emit(event: string | symbol, ...args: any[]): boolean;\n 6446:         emit(event: \"connect\", session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;\n 6447:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6448  \n 6449          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6498          addListener(event: \"timeout\", listener: () => void): this;\n 6499  \n 6500:         emit(event: string | symbol, ...args: any[]): boolean;\n 6501:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6502:         emit(event: \"sessionError\", err: Error): boolean;\n 6503:         emit(event: \"socketError\", err: Error): boolean;\n 6504:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6505:         emit(event: \"timeout\"): boolean;\n 6506  \n 6507          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6543          addListener(event: \"unknownProtocol\", listener: (socket: tls.TLSSocket) => void): this;\n 6544  \n 6545:         emit(event: string | symbol, ...args: any[]): boolean;\n 6546:         emit(event: \"request\", request: Http2ServerRequest, response: Http2ServerResponse): boolean;\n 6547:         emit(event: \"sessionError\", err: Error): boolean;\n 6548:         emit(event: \"socketError\", err: Error): boolean;\n 6549:         emit(event: \"stream\", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;\n 6550:         emit(event: \"timeout\"): boolean;\n 6551:         emit(event: \"unknownProtocol\", socket: tls.TLSSocket): boolean;\n 6552  \n 6553          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6599          addListener(event: \"aborted\", listener: (hadError: boolean, code: number) => void): this;\n 6600  \n 6601:         emit(event: string | symbol, ...args: any[]): boolean;\n 6602:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6603  \n 6604          on(event: string, listener: (...args: any[]) => void): this;\n ....\n 6649          addListener(event: \"finish\", listener: () => void): this;\n 6650  \n 6651:         emit(event: string | symbol, ...args: any[]): boolean;\n 6652:         emit(event: \"aborted\", hadError: boolean, code: number): boolean;\n 6653:         emit(event: \"close\"): boolean;\n 6654:         emit(event: \"drain\"): boolean;\n 6655:         emit(event: \"error\", error: Error): boolean;\n 6656:         emit(event: \"finish\"): boolean;\n 6657  \n 6658          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@types\\node\\inspector.d.ts:\n 2074          addListener(event: \"HeapProfiler.heapStatsUpdate\", listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;\n 2075  \n 2076:         emit(event: string | symbol, ...args: any[]): boolean;\n 2077:         emit(event: \"inspectorNotification\", message: InspectorNotification<{}>): boolean;\n 2078:         emit(event: \"Runtime.executionContextCreated\", message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>): boolean;\n 2079:         emit(event: \"Runtime.executionContextDestroyed\", message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>): boolean;\n 2080:         emit(event: \"Runtime.executionContextsCleared\"): boolean;\n 2081:         emit(event: \"Runtime.exceptionThrown\", message: InspectorNotification<Runtime.ExceptionThrownEventDataType>): boolean;\n 2082:         emit(event: \"Runtime.exceptionRevoked\", message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>): boolean;\n 2083:         emit(event: \"Runtime.consoleAPICalled\", message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>): boolean;\n 2084:         emit(event: \"Runtime.inspectRequested\", message: InspectorNotification<Runtime.InspectRequestedEventDataType>): boolean;\n 2085:         emit(event: \"Debugger.scriptParsed\", message: InspectorNotification<Debugger.ScriptParsedEventDataType>): boolean;\n 2086:         emit(event: \"Debugger.scriptFailedToParse\", message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>): boolean;\n 2087:         emit(event: \"Debugger.breakpointResolved\", message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>): boolean;\n 2088:         emit(event: \"Debugger.paused\", message: InspectorNotification<Debugger.PausedEventDataType>): boolean;\n 2089:         emit(event: \"Debugger.resumed\"): boolean;\n 2090:         emit(event: \"Console.messageAdded\", message: InspectorNotification<Console.MessageAddedEventDataType>): boolean;\n 2091:         emit(event: \"Profiler.consoleProfileStarted\", message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>): boolean;\n 2092:         emit(event: \"Profiler.consoleProfileFinished\", message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>): boolean;\n 2093:         emit(event: \"HeapProfiler.addHeapSnapshotChunk\", message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>): boolean;\n 2094:         emit(event: \"HeapProfiler.resetProfiles\"): boolean;\n 2095:         emit(event: \"HeapProfiler.reportHeapSnapshotProgress\", message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>): boolean;\n 2096:         emit(event: \"HeapProfiler.lastSeenObjectId\", message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>): boolean;\n 2097:         emit(event: \"HeapProfiler.heapStatsUpdate\", message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>): boolean;\n 2098  \n 2099          on(event: string, listener: (...args: any[]) => void): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\@types\\selenium-webdriver\\index.d.ts:\n 3171     * @param {...*} var_args Any arguments to pass to each listener.\n 3172     */\n 3173:   emit(type: string, ...var_args: any[]): void;\n 3174  \n 3175    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\eventemitter3\\index.d.ts:\n   25     * Calls each of the listeners registered for a given event.\n   26     */\n   27:   emit(event: EventTypes, ...args: Array<any>): boolean;\n   28  \n   29    /**\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\protractor\\node_modules\\@types\\node\\index.d.ts:\n  375          getMaxListeners(): number;\n  376          listeners(event: string | symbol): Function[];\n  377:         emit(event: string | symbol, ...args: any[]): boolean;\n  378          listenerCount(type: string | symbol): number;\n  379          // Added in Node 6...\n  ...\n  725              getMaxListeners(): number;\n  726              listeners(event: string | symbol): Function[];\n  727:             emit(event: string | symbol, ...args: any[]): boolean;\n  728              eventNames(): (string | symbol)[];\n  729              listenerCount(type: string | symbol): number;\n  ...\n 1018          addListener(event: \"online\", listener: () => void): this;\n 1019  \n 1020:         emit(event: string | symbol, ...args: any[]): boolean;\n 1021:         emit(event: \"disconnect\", listener: () => void): boolean\n 1022:         emit(event: \"error\", listener: (error: Error) => void): boolean\n 1023:         emit(event: \"exit\", listener: (code: number, signal: string) => void): boolean\n 1024:         emit(event: \"listening\", listener: (address: Address) => void): boolean\n 1025:         emit(event: \"message\", listener: (message: any, handle: net.Socket | net.Server) => void): boolean\n 1026:         emit(event: \"online\", listener: () => void): boolean\n 1027  \n 1028          on(event: string, listener: Function): this;\n ....\n 1092          addListener(event: \"setup\", listener: (settings: any) => void): this;\n 1093  \n 1094:         emit(event: string | symbol, ...args: any[]): boolean;\n 1095:         emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1096:         emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1097:         emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1098:         emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1099:         emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1100:         emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1101:         emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1102  \n 1103          on(event: string, listener: Function): this;\n ....\n 1170      export function addListener(event: \"setup\", listener: (settings: any) => void): Cluster;\n 1171  \n 1172:     export function emit(event: string | symbol, ...args: any[]): boolean;\n 1173:     export function emit(event: \"disconnect\", listener: (worker: Worker) => void): boolean;\n 1174:     export function emit(event: \"exit\", listener: (worker: Worker, code: number, signal: string) => void): boolean;\n 1175:     export function emit(event: \"fork\", listener: (worker: Worker) => void): boolean;\n 1176:     export function emit(event: \"listening\", listener: (worker: Worker, address: Address) => void): boolean;\n 1177:     export function emit(event: \"message\", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): boolean;\n 1178:     export function emit(event: \"online\", listener: (worker: Worker) => void): boolean;\n 1179:     export function emit(event: \"setup\", listener: (settings: any) => void): boolean;\n 1180  \n 1181      export function on(event: string, listener: Function): Cluster;\n ....\n 1565          addListener(event: \"reset\", listener: Function): this;\n 1566  \n 1567:         emit(event: string | symbol, ...args: any[]): boolean;\n 1568:         emit(event: \"exit\"): boolean;\n 1569:         emit(event: \"reset\", context: any): boolean;\n 1570  \n 1571          on(event: string, listener: Function): this;\n ....\n 1630          addListener(event: \"SIGTSTP\", listener: () => void): this;\n 1631  \n 1632:         emit(event: string | symbol, ...args: any[]): boolean;\n 1633:         emit(event: \"close\"): boolean;\n 1634:         emit(event: \"line\", input: any): boolean;\n 1635:         emit(event: \"pause\"): boolean;\n 1636:         emit(event: \"resume\"): boolean;\n 1637:         emit(event: \"SIGCONT\"): boolean;\n 1638:         emit(event: \"SIGINT\"): boolean;\n 1639:         emit(event: \"SIGTSTP\"): boolean;\n 1640  \n 1641          on(event: string, listener: Function): this;\n ....\n 1770          addListener(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n 1771  \n 1772:         emit(event: string | symbol, ...args: any[]): boolean;\n 1773:         emit(event: \"close\", code: number, signal: string): boolean;\n 1774:         emit(event: \"disconnect\"): boolean;\n 1775:         emit(event: \"error\", err: Error): boolean;\n 1776:         emit(event: \"exit\", code: number, signal: string): boolean;\n 1777:         emit(event: \"message\", message: any, sendHandle: net.Socket | net.Server): boolean;\n 1778  \n 1779          on(event: string, listener: Function): this;\n ....\n 2221          addListener(event: \"timeout\", listener: () => void): this;\n 2222  \n 2223:         emit(event: string | symbol, ...args: any[]): boolean;\n 2224:         emit(event: \"close\", had_error: boolean): boolean;\n 2225:         emit(event: \"connect\"): boolean;\n 2226:         emit(event: \"data\", data: Buffer): boolean;\n 2227:         emit(event: \"drain\"): boolean;\n 2228:         emit(event: \"end\"): boolean;\n 2229:         emit(event: \"error\", err: Error): boolean;\n 2230:         emit(event: \"lookup\", err: Error, address: string, family: string | number, host: string): boolean;\n 2231:         emit(event: \"timeout\"): boolean;\n 2232  \n 2233          on(event: string, listener: Function): this;\n ....\n 2315          addListener(event: \"listening\", listener: () => void): this;\n 2316  \n 2317:         emit(event: string | symbol, ...args: any[]): boolean;\n 2318:         emit(event: \"close\"): boolean;\n 2319:         emit(event: \"connection\", socket: Socket): boolean;\n 2320:         emit(event: \"error\", err: Error): boolean;\n 2321:         emit(event: \"listening\"): boolean;\n 2322  \n 2323          on(event: string, listener: Function): this;\n ....\n 2416          addListener(event: \"message\", listener: (msg: Buffer, rinfo: AddressInfo) => void): this;\n 2417  \n 2418:         emit(event: string | symbol, ...args: any[]): boolean;\n 2419:         emit(event: \"close\"): boolean;\n 2420:         emit(event: \"error\", err: Error): boolean;\n 2421:         emit(event: \"listening\"): boolean;\n 2422:         emit(event: \"message\", msg: Buffer, rinfo: AddressInfo): boolean;\n 2423  \n 2424          on(event: string, listener: Function): this;\n ....\n 3369          addListener(event: \"secureConnect\", listener: () => void): this;\n 3370  \n 3371:         emit(event: string | symbol, ...args: any[]): boolean;\n 3372:         emit(event: \"OCSPResponse\", response: Buffer): boolean;\n 3373:         emit(event: \"secureConnect\"): boolean;\n 3374  \n 3375          on(event: string, listener: Function): this;\n ....\n 3462          addListener(event: \"secureConnection\", listener: (tlsSocket: TLSSocket) => void): this;\n 3463  \n 3464:         emit(event: string | symbol, ...args: any[]): boolean;\n 3465:         emit(event: \"tlsClientError\", err: Error, tlsSocket: TLSSocket): boolean;\n 3466:         emit(event: \"newSession\", sessionId: any, sessionData: any, callback: (err: Error, resp: Buffer) => void): boolean;\n 3467:         emit(event: \"OCSPRequest\", certificate: Buffer, issuer: Buffer, callback: Function): boolean;\n 3468:         emit(event: \"resumeSession\", sessionId: any, callback: (err: Error, sessionData: any) => void): boolean;\n 3469:         emit(event: \"secureConnection\", tlsSocket: TLSSocket): boolean;\n 3470  \n 3471          on(event: string, listener: Function): this;\n ....\n 3745              addListener(event: \"error\", listener: (err: Error) => void): this;\n 3746  \n 3747:             emit(event: string | symbol, ...args: any[]): boolean;\n 3748:             emit(event: \"close\"): boolean;\n 3749:             emit(event: \"data\", chunk: Buffer | string): boolean;\n 3750:             emit(event: \"end\"): boolean;\n 3751:             emit(event: \"readable\"): boolean;\n 3752:             emit(event: \"error\", err: Error): boolean;\n 3753  \n 3754              on(event: string, listener: Function): this;\n ....\n 3825              addListener(event: \"unpipe\", listener: (src: Readable) => void): this;\n 3826  \n 3827:             emit(event: string | symbol, ...args: any[]): boolean;\n 3828:             emit(event: \"close\"): boolean;\n 3829:             emit(event: \"drain\", chunk: Buffer | string): boolean;\n 3830:             emit(event: \"error\", err: Error): boolean;\n 3831:             emit(event: \"finish\"): boolean;\n 3832:             emit(event: \"pipe\", src: Readable): boolean;\n 3833:             emit(event: \"unpipe\", src: Readable): boolean;\n 3834  \n 3835              on(event: string, listener: Function): this;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\rxjs\\internal\\operators\\sequenceEqual.d.ts:\n   79      _complete(): void;\n   80      checkValues(): void;\n   81:     emit(value: boolean): void;\n   82      nextB(value: T): void;\n   83      completeB(): void;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\rxjs\\src\\internal\\operators\\sequenceEqual.ts:\n   96    protected _next(value: T): void {\n   97      if (this._oneComplete && this._b.length === 0) {\n   98:       this.emit(false);\n   99      } else {\n  100        this._a.push(value);\n  ...\n  105    public _complete(): void {\n  106      if (this._oneComplete) {\n  107:       this.emit(this._a.length === 0 && this._b.length === 0);\n  108      } else {\n  109        this._oneComplete = true;\n  ...\n  127        }\n  128        if (!areEqual) {\n  129:         this.emit(false);\n  130        }\n  131      }\n  132    }\n  133  \n  134:   emit(value: boolean) {\n  135      const { destination } = this;\n  136      destination.next(value);\n  ...\n  140    nextB(value: T) {\n  141      if (this._oneComplete && this._a.length === 0) {\n  142:       this.emit(false);\n  143      } else {\n  144        this._b.push(value);\n  ...\n  149    completeB() {\n  150      if (this._oneComplete) {\n  151:       this.emit(this._a.length === 0 && this._b.length === 0);\n  152      } else {\n  153        this._oneComplete = true;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\tsickle\\src\\rewriter.d.ts:\n   70       */\n   71      writeRange(node: ts.Node, from: number, to: number): void;\n   72:     emit(str: string): void;\n   73      /** Removes comment metacharacters from a string, to make it safe to embed in a comment. */\n   74      escapeForComment(str: string): string;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\tsickle\\src\\typescript-2.4.d.ts:\n 1668           * will be invoked when writing the JavaScript and declaration files.\n 1669           */\n 1670:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1671          getOptionsDiagnostics(cancellationToken?: CancellationToken): Diagnostic[];\n 1672          getGlobalDiagnostics(cancellationToken?: CancellationToken): Diagnostic[];\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\typescript\\lib\\tsserverlibrary.d.ts:\n 1654           * will be invoked when writing the JavaScript and declaration files.\n 1655           */\n 1656:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1657          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1658          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\typescript\\lib\\typescript.d.ts:\n 1654           * will be invoked when writing the JavaScript and declaration files.\n 1655           */\n 1656:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1657          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1658          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 3932           * in that order would be used to write the files\n 3933           */\n 3934:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 3935          /**\n 3936           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\node_modules\\typescript\\lib\\typescriptServices.d.ts:\n 1654           * will be invoked when writing the JavaScript and declaration files.\n 1655           */\n 1656:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 1657          getOptionsDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n 1658          getGlobalDiagnostics(cancellationToken?: CancellationToken): ReadonlyArray<Diagnostic>;\n ....\n 3932           * in that order would be used to write the files\n 3933           */\n 3934:         emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n 3935          /**\n 3936           * Get the current directory of the program\n\nE:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\cmp-databinding_5_60\\src\\app\\cockpit\\cockpit.component.ts:\n   19    onAddServer(serverName) {\n   20    \tvar serverElementContent = this.serverHTMLElementContentInput.nativeElement.value;\n   21:   \tthis.serverCreated.emit(new Server(serverName,this.serverElementValue()));\n   22    }\n   23  \n   24    onAddBlueprint(serverName) {\n   25    \tvar serverElementContent = this.serverHTMLElementContentInput.nativeElement.value;\n   26:   \tthis.blueprintCreated.emit(new Server(serverName, this.serverElementValue()));\n   27    }\n   28  \n\n1119 matches across 74 files\n",
			"settings":
			{
				"buffer_size": 148475,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "_RecipeBook/src/app/header/header.component.ts",
			"settings":
			{
				"buffer_size": 304,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "_RecipeBook/src/app/header/header.component.html",
			"settings":
			{
				"buffer_size": 904,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "_RecipeBook/src/app/recipes/recipe.model.ts",
			"settings":
			{
				"buffer_size": 276,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"type",
				"Set Syntax: TypeScript"
			],
			[
				"pretti",
				"JsPrettier: Format Code"
			],
			[
				"js",
				"Set Syntax: JavaScript"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"pret",
				"HTMLPrettify"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"typ",
				"Set Syntax: TypeScript"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"tabs",
				"TabsExtra: Settings"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insall pa",
				"Package Control: Install Package"
			],
			[
				"html ",
				"HTMLBeautify"
			],
			[
				"typescr",
				"Set Syntax: TypeScript"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"project",
				"Project: Save As"
			],
			[
				"form",
				"ESLint Formatter: Format this file"
			],
			[
				"vue",
				"Set Syntax: Vue Component"
			],
			[
				"ja",
				"Set Syntax: JavaScript"
			],
			[
				"es",
				"ESLint Formatter: Format this file"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"esl",
				"ESLint Formatter: Format this file"
			],
			[
				"jav",
				"Set Syntax: JavaScript"
			],
			[
				"",
				"ESLint Formatter: Format this file"
			],
			[
				"htm",
				"HTMLBeautify"
			],
			[
				"line",
				"Line Endings Unify"
			],
			[
				"javascrip",
				"Javascript Beautify"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"javasc",
				"Set Syntax: JavaScript"
			],
			[
				"vue ",
				"Set Syntax: Vue Component"
			],
			[
				"vue c",
				"Snippet: Vue component"
			],
			[
				"syn vue",
				"Set Syntax: Vue Component"
			],
			[
				"format css",
				"Format CSS: Compact"
			],
			[
				"set sycss",
				"Set Syntax: CSS"
			],
			[
				"h",
				"HTMLBeautify"
			],
			[
				"ht",
				"HTMLBeautify"
			],
			[
				"eslin",
				"ESLint Formatter: Format this file"
			],
			[
				"format",
				"ESLint Formatter: Format this file"
			],
			[
				"for",
				"ESLint Formatter: Format this file"
			],
			[
				"pref",
				"Preferences: Settings"
			],
			[
				"forma",
				"ESLint Formatter: Format this file"
			],
			[
				"syn vu",
				"Set Syntax: Vue Component"
			],
			[
				"vue aut",
				"VUEFormatter: Set Keyboard Shortcuts"
			],
			[
				"fomrat",
				"ESLint Formatter: Format this file"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"rmeove pa",
				"Package Control: Remove Package"
			],
			[
				"eslint",
				"ESLint Formatter: Format this file"
			],
			[
				"sublimelinter",
				"SublimeLinter: Show All Errors"
			],
			[
				"sublimelinter ",
				"SublimeLinter: Show All Errors"
			],
			[
				"ori cr pa r",
				"Origami: Create Pane on the Right"
			],
			[
				"linter",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"pug",
				"Set Syntax: Pug"
			],
			[
				"npm",
				"Set Syntax: NPM JSON"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"color pic",
				"Color Picker"
			],
			[
				"color",
				"Toggle Colorcode on this view"
			],
			[
				"se sy css",
				"Set Syntax: CSS"
			],
			[
				"set sy  css",
				"Set Syntax: CSS"
			],
			[
				"s s html",
				"Set Syntax: HTML"
			],
			[
				"ori zoo",
				"Origami: Unzoom Current Pane"
			],
			[
				"ori clon ri",
				"Origami: Clone File to Pane on the Right"
			],
			[
				"de pa le",
				"Origami: Destroy Pane on the Left"
			],
			[
				"de pa ri",
				"Origami: Destroy Pane on the Right"
			],
			[
				"cre wi ",
				"Origami: Create Pane with File Below"
			],
			[
				"fo pa le",
				"Origami: Focus on Pane on the Left"
			],
			[
				"des p b",
				"Origami: Destroy Pane Below"
			],
			[
				"cr pa le",
				"Origami: Create Pane on the Left"
			],
			[
				"cr pa be",
				"Origami: Create Pane Below"
			],
			[
				"or cre pa ri",
				"Origami: Create Pane on the Right"
			],
			[
				"insall p",
				"Package Control: Install Package"
			],
			[
				"sy htm",
				"Set Syntax: HTML"
			],
			[
				"set sy css",
				"Set Syntax: CSS"
			],
			[
				"syn html",
				"Set Syntax: HTML"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"lowerc",
				"Convert Case: Lower Case"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"up",
				"Convert Case: Upper Case"
			],
			[
				"pre",
				"HTMLPrettify"
			],
			[
				"html pre",
				"HTMLPrettify"
			],
			[
				"beaut",
				"HTMLBeautify"
			],
			[
				"materi",
				"Activate Materialize Theme"
			],
			[
				"materia",
				"Activate Materialize Theme"
			],
			[
				"intall pa",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			]
		],
		"width": 538.0
	},
	"console":
	{
		"height": 197.0,
		"history":
		[
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"----------------"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/MyStuff/Personal/Trainings/Angular_Udemy",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/projectTemplate"
	],
	"file_history":
	[
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/game-control/game-control.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/game-control/game-control.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/app.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/odd-number/odd-number.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/even-number/even-number.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/app.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/recipes/recipe.model.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/app.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/even-number/even-number.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/odd-number/odd-number.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/odd-number/odd-number.component.css",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/even-number/even-number.component.css",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding-assignment-start/src/app/app.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/CourseNotes.txt",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/app.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/app.component.css",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/server-element/server-element.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/cockpit/cockpit.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/cockpit/cockpit.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/styles.css",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/server-element/server-element.component.css",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/server-element/server-element.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/shared/server.model.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/app.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/shopping-list/shopping-list.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/cmp-databinding_5_60/src/app/app.component.spec.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/recipes/recipe-list/recipe-list.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/angular.json",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/app.module.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/header/header.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/header/header.component.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/shared/ingredient.model.ts",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/recipes/recipe-detail/recipe-detail.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/recipes/recipe-list/recipe-list.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/recipes/recipes.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/shopping-list/shopping-edit/shopping-edit.component.html",
		"/E/MyStuff/Personal/Trainings/Angular_Udemy/_RecipeBook/src/app/shopping-list/shopping-list.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_ExerciseLectureApp/src/app/servers/servers.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_ExerciseLectureApp/src/app/servers/servers.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_ExerciseLectureApp/src/app/server/server.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_ExerciseLectureApp/src/app/server/server.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/CourseNotes.txt",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_RecipeBook/src/app/app.module.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_3/src/app/app.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_RecipeBook/src/app/app.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_3/src/app/app.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_RecipeBook/src/app/app.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_3/src/app/app.component.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_RecipeBook/angular.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/_ExerciseLectureApp/src/app/server/server.component.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/favicon.ico",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/tslint.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/tsconfig.spec.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/tsconfig.app.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/package.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/karma.conf.js",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/index.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/how-to-use.txt",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/browserslist",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/app/app.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/app/app.component.spec.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/app/app.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/app/app.component.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/angular.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/tslint.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/tsconfig.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/styles.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/README.md",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/polyfills.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/package-lock.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/.gitignore",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/test.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/main.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_2/src/app/app.module.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/server/server.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/app.component.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/servers/servers.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/app.module.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/servers/servers.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/my-first-angular-app/src/app/app.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/my-first-angular-app/src/app/app.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/my-first-angular-app/src/index.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/my-first-angular-app/angular.json",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/my-first-angular-app/src/app/app.module.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/main.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/my-first-angular-app/node_modules/bootstrap/dist/css/bootstrap.min.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/index.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/app.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/app.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/server/server.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/Section_2_13/src/app/servers/servers.component.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/warning-error/warning-error.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/warning-alert/warning-alert.component.css",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/warning-alert/warning-alert.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/app.module.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/app.component.html",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/warning-alert/warning-alert.component.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/warning-error/warning-error.component.spec.ts",
		"/Users/jhuerta/Documents/Trainings/AngularUdemy/assignment_1/src/app/warning-error/warning-error.component.html",
		"/Users/jhuerta/Documents/Training/Angular/CourseNotes.txt",
		"/Users/jhuerta/Documents/Training/Angular/CourseNotes",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4373.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4374.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4375.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4376.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4377.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4378.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4396.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4399.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4402.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4403.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4404.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4406.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4411.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4412.JPG",
		"/Users/jhuerta/Desktop/IMG_4402/IMG_4415.JPG",
		"/Users/jhuerta/Documents/Training/Vue/poc/src/components/agText.vue",
		"/Users/jhuerta/Documents/Training/Vue/poc/src/mixins/agiloftWebServices.js",
		"/Users/jhuerta/Documents/Training/Vue/poc/src/mixins/agiloftBaseComponent.js",
		"/Users/jhuerta/Documents/Training/Vue/poc/index.html",
		"/Users/jhuerta/Documents/Training/Vue/poc/src/components/agCurrency.vue",
		"/Users/jhuerta/Documents/Training/Vue/poc/src/components/agTextCurrency.vue",
		"/Users/jhuerta/Documents/Training/Vue/agTextList.vue",
		"/Users/jhuerta/Documents/Training/Vue/poc/src/main.js",
		"/E/MyStuff/Personal/Trainings/Vue_Agiloft_Poc/agiloft/index.html",
		"/E/MyStuff/Personal/Trainings/Vue_Agiloft_Poc/poc/src/mixins/agBaseComponent.vue",
		"/E/MyStuff/Personal/Trainings/Vue_Agiloft_Poc/poc/src/components/agTextMix.vue",
		"/E/MyStuff/Personal/Trainings/Vue_Agiloft_Poc/poc/src/mixins/agiloftWebServices.js"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 155.0,
		"where_history":
		[
			"E:\\MyStuff\\Personal\\Trainings\\Angular_Udemy,*.ts",
			"E:\\MyStuff\\Personal\\Trainings\\Angular_Udemy"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"emit(",
			"emmiter",
			"display:string=\"\"",
			"onAddBlueprint",
			"Ingredient",
			"hola",
			"scratch"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"hola"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "_RecipeBook/src/app/shopping-list/shopping-list.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 463,
						"regions":
						{
						},
						"selection":
						[
							[
								419,
								419
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										501,
										502
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										310,
										311
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										461,
										462
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										310,
										311
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1542304575.92,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "_RecipeBook/src/app/recipes/recipes.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 346,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								258
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tabs_extra_last_activated": 1542304643.22,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_spawned": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "_RecipeBook/src/app/app.component.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 392,
						"regions":
						{
						},
						"selection":
						[
							[
								257,
								257
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										257,
										258
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										237,
										238
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										257,
										258
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										237,
										238
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tabs_extra_last_activated": 1542352337.43,
							"tabs_extra_last_activated_sheet_index": 2,
							"tabs_extra_spawned": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "CourseNotes.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13047,
						"regions":
						{
						},
						"selection":
						[
							[
								12979,
								12979
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1542352522.77,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5501.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "_RecipeBook/src/app/app.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 268,
						"regions":
						{
						},
						"selection":
						[
							[
								209,
								229
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										231,
										232
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										205,
										206
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tabs_extra_last_activated": 1542304684.3,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_spawned": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 148475,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										192,
										209
									],
									[
										446,
										463
									],
									[
										652,
										669
									],
									[
										1061,
										1066
									],
									[
										1465,
										1470
									],
									[
										1803,
										1808
									],
									[
										2282,
										2287
									],
									[
										2615,
										2620
									],
									[
										2677,
										2682
									],
									[
										2797,
										2802
									],
									[
										3126,
										3131
									],
									[
										3401,
										3406
									],
									[
										3466,
										3471
									],
									[
										3517,
										3522
									],
									[
										3576,
										3581
									],
									[
										3656,
										3661
									],
									[
										3728,
										3733
									],
									[
										3823,
										3828
									],
									[
										3887,
										3892
									],
									[
										3963,
										3968
									],
									[
										4009,
										4014
									],
									[
										4122,
										4127
									],
									[
										4435,
										4440
									],
									[
										4714,
										4719
									],
									[
										4784,
										4789
									],
									[
										4835,
										4840
									],
									[
										4895,
										4900
									],
									[
										4970,
										4975
									],
									[
										5038,
										5043
									],
									[
										5133,
										5138
									],
									[
										5363,
										5368
									],
									[
										5433,
										5438
									],
									[
										5500,
										5505
									],
									[
										5591,
										5596
									],
									[
										5652,
										5657
									],
									[
										5736,
										5741
									],
									[
										5847,
										5852
									],
									[
										5910,
										5915
									],
									[
										6181,
										6186
									],
									[
										6263,
										6268
									],
									[
										6342,
										6347
									],
									[
										6445,
										6450
									],
									[
										6518,
										6523
									],
									[
										6614,
										6619
									],
									[
										6737,
										6742
									],
									[
										6812,
										6817
									],
									[
										7072,
										7077
									],
									[
										7142,
										7147
									],
									[
										7187,
										7192
									],
									[
										7419,
										7424
									],
									[
										7489,
										7494
									],
									[
										7535,
										7540
									],
									[
										7592,
										7597
									],
									[
										7638,
										7643
									],
									[
										7685,
										7690
									],
									[
										7733,
										7738
									],
									[
										7780,
										7785
									],
									[
										8049,
										8054
									],
									[
										8119,
										8124
									],
									[
										8195,
										8200
									],
									[
										8246,
										8251
									],
									[
										8304,
										8309
									],
									[
										8379,
										8384
									],
									[
										8650,
										8655
									],
									[
										8720,
										8725
									],
									[
										8786,
										8791
									],
									[
										8834,
										8839
									],
									[
										8893,
										8898
									],
									[
										8939,
										8944
									],
									[
										8983,
										8988
									],
									[
										9041,
										9046
									],
									[
										9156,
										9161
									],
									[
										9378,
										9383
									],
									[
										9448,
										9453
									],
									[
										9494,
										9499
									],
									[
										9561,
										9566
									],
									[
										9619,
										9624
									],
									[
										9872,
										9877
									],
									[
										9942,
										9947
									],
									[
										9988,
										9993
									],
									[
										10046,
										10051
									],
									[
										10096,
										10101
									],
									[
										10355,
										10360
									],
									[
										10425,
										10430
									],
									[
										10496,
										10501
									],
									[
										10751,
										10756
									],
									[
										10821,
										10826
									],
									[
										10910,
										10915
									],
									[
										11041,
										11046
									],
									[
										11150,
										11155
									],
									[
										11270,
										11275
									],
									[
										11537,
										11542
									],
									[
										11611,
										11616
									],
									[
										11661,
										11666
									],
									[
										11734,
										11739
									],
									[
										11782,
										11787
									],
									[
										11835,
										11840
									],
									[
										12089,
										12094
									],
									[
										12163,
										12168
									],
									[
										12213,
										12218
									],
									[
										12287,
										12292
									],
									[
										12349,
										12354
									],
									[
										12400,
										12405
									],
									[
										12464,
										12469
									],
									[
										12747,
										12752
									],
									[
										12817,
										12822
									],
									[
										12865,
										12870
									],
									[
										12911,
										12916
									],
									[
										12980,
										12985
									],
									[
										13026,
										13031
									],
									[
										13070,
										13075
									],
									[
										13128,
										13133
									],
									[
										13175,
										13180
									],
									[
										13264,
										13269
									],
									[
										13331,
										13336
									],
									[
										13400,
										13405
									],
									[
										13467,
										13472
									],
									[
										13515,
										13520
									],
									[
										13826,
										13831
									],
									[
										13896,
										13901
									],
									[
										13989,
										13994
									],
									[
										14079,
										14084
									],
									[
										14345,
										14350
									],
									[
										14415,
										14420
									],
									[
										14461,
										14466
									],
									[
										14519,
										14524
									],
									[
										14626,
										14631
									],
									[
										14734,
										14739
									],
									[
										14808,
										14813
									],
									[
										14883,
										14888
									],
									[
										14947,
										14952
									],
									[
										15236,
										15241
									],
									[
										15306,
										15311
									],
									[
										15419,
										15424
									],
									[
										15779,
										15784
									],
									[
										15849,
										15854
									],
									[
										15962,
										15967
									],
									[
										16253,
										16258
									],
									[
										16323,
										16328
									],
									[
										16431,
										16436
									],
									[
										16496,
										16501
									],
									[
										16560,
										16565
									],
									[
										16679,
										16684
									],
									[
										16928,
										16933
									],
									[
										16998,
										17003
									],
									[
										17106,
										17111
									],
									[
										17171,
										17176
									],
									[
										17235,
										17240
									],
									[
										17354,
										17359
									],
									[
										17402,
										17407
									],
									[
										17684,
										17689
									],
									[
										17754,
										17759
									],
									[
										18006,
										18011
									],
									[
										18076,
										18081
									],
									[
										18157,
										18162
									],
									[
										18203,
										18208
									],
									[
										18249,
										18254
									],
									[
										18309,
										18314
									],
									[
										18722,
										18727
									],
									[
										18792,
										18797
									],
									[
										18890,
										18895
									],
									[
										19040,
										19045
									],
									[
										19194,
										19199
									],
									[
										19267,
										19272
									],
									[
										19401,
										19406
									],
									[
										19537,
										19542
									],
									[
										19673,
										19678
									],
									[
										19809,
										19814
									],
									[
										19939,
										19944
									],
									[
										20083,
										20088
									],
									[
										20225,
										20230
									],
									[
										20343,
										20348
									],
									[
										20400,
										20405
									],
									[
										20528,
										20533
									],
									[
										20676,
										20681
									],
									[
										20826,
										20831
									],
									[
										20980,
										20985
									],
									[
										21047,
										21052
									],
									[
										21213,
										21218
									],
									[
										21359,
										21364
									],
									[
										21785,
										21790
									],
									[
										22048,
										22053
									],
									[
										22369,
										22374
									],
									[
										22659,
										22664
									],
									[
										22935,
										22940
									],
									[
										23005,
										23010
									],
									[
										23077,
										23082
									],
									[
										23156,
										23161
									],
									[
										23250,
										23255
									],
									[
										23337,
										23342
									],
									[
										23451,
										23456
									],
									[
										23686,
										23691
									],
									[
										23756,
										23761
									],
									[
										23843,
										23848
									],
									[
										23954,
										23959
									],
									[
										24035,
										24040
									],
									[
										24139,
										24144
									],
									[
										24270,
										24275
									],
									[
										24353,
										24358
									],
									[
										24628,
										24633
									],
									[
										24710,
										24715
									],
									[
										24809,
										24814
									],
									[
										24932,
										24937
									],
									[
										25025,
										25030
									],
									[
										25141,
										25146
									],
									[
										25284,
										25289
									],
									[
										25379,
										25384
									],
									[
										25627,
										25632
									],
									[
										25697,
										25702
									],
									[
										25742,
										25747
									],
									[
										25958,
										25963
									],
									[
										26028,
										26033
									],
									[
										26074,
										26079
									],
									[
										26131,
										26136
									],
									[
										26177,
										26182
									],
									[
										26224,
										26229
									],
									[
										26272,
										26277
									],
									[
										26319,
										26324
									],
									[
										26572,
										26577
									],
									[
										26642,
										26647
									],
									[
										26718,
										26723
									],
									[
										26769,
										26774
									],
									[
										26827,
										26832
									],
									[
										26902,
										26907
									],
									[
										27157,
										27162
									],
									[
										27227,
										27232
									],
									[
										27293,
										27298
									],
									[
										27341,
										27346
									],
									[
										27400,
										27405
									],
									[
										27446,
										27451
									],
									[
										27490,
										27495
									],
									[
										27548,
										27553
									],
									[
										27663,
										27668
									],
									[
										27869,
										27874
									],
									[
										27939,
										27944
									],
									[
										27985,
										27990
									],
									[
										28052,
										28057
									],
									[
										28110,
										28115
									],
									[
										28347,
										28352
									],
									[
										28417,
										28422
									],
									[
										28463,
										28468
									],
									[
										28521,
										28526
									],
									[
										28571,
										28576
									],
									[
										28814,
										28819
									],
									[
										28884,
										28889
									],
									[
										28955,
										28960
									],
									[
										29194,
										29199
									],
									[
										29264,
										29269
									],
									[
										29353,
										29358
									],
									[
										29484,
										29489
									],
									[
										29593,
										29598
									],
									[
										29713,
										29718
									],
									[
										29964,
										29969
									],
									[
										30038,
										30043
									],
									[
										30088,
										30093
									],
									[
										30161,
										30166
									],
									[
										30209,
										30214
									],
									[
										30262,
										30267
									],
									[
										30500,
										30505
									],
									[
										30574,
										30579
									],
									[
										30624,
										30629
									],
									[
										30698,
										30703
									],
									[
										30760,
										30765
									],
									[
										30811,
										30816
									],
									[
										30875,
										30880
									],
									[
										31189,
										31194
									],
									[
										31526,
										31531
									],
									[
										31689,
										31694
									],
									[
										31871,
										31876
									],
									[
										31940,
										31945
									],
									[
										32151,
										32156
									],
									[
										32301,
										32306
									],
									[
										32646,
										32651
									],
									[
										33146,
										33151
									],
									[
										33641,
										33646
									],
									[
										34141,
										34146
									],
									[
										34644,
										34649
									],
									[
										35144,
										35149
									],
									[
										35647,
										35652
									],
									[
										36043,
										36048
									],
									[
										36373,
										36378
									],
									[
										36844,
										36849
									],
									[
										37169,
										37174
									],
									[
										37231,
										37236
									],
									[
										37351,
										37356
									],
									[
										37672,
										37677
									],
									[
										37947,
										37952
									],
									[
										38012,
										38017
									],
									[
										38063,
										38068
									],
									[
										38122,
										38127
									],
									[
										38202,
										38207
									],
									[
										38274,
										38279
									],
									[
										38369,
										38374
									],
									[
										38433,
										38438
									],
									[
										38509,
										38514
									],
									[
										38555,
										38560
									],
									[
										38668,
										38673
									],
									[
										38981,
										38986
									],
									[
										39260,
										39265
									],
									[
										39330,
										39335
									],
									[
										39381,
										39386
									],
									[
										39441,
										39446
									],
									[
										39516,
										39521
									],
									[
										39584,
										39589
									],
									[
										39679,
										39684
									],
									[
										39909,
										39914
									],
									[
										39979,
										39984
									],
									[
										40046,
										40051
									],
									[
										40137,
										40142
									],
									[
										40198,
										40203
									],
									[
										40282,
										40287
									],
									[
										40393,
										40398
									],
									[
										40456,
										40461
									],
									[
										40727,
										40732
									],
									[
										40809,
										40814
									],
									[
										40888,
										40893
									],
									[
										40991,
										40996
									],
									[
										41064,
										41069
									],
									[
										41160,
										41165
									],
									[
										41283,
										41288
									],
									[
										41358,
										41363
									],
									[
										41618,
										41623
									],
									[
										41688,
										41693
									],
									[
										41733,
										41738
									],
									[
										41965,
										41970
									],
									[
										42035,
										42040
									],
									[
										42081,
										42086
									],
									[
										42138,
										42143
									],
									[
										42184,
										42189
									],
									[
										42231,
										42236
									],
									[
										42279,
										42284
									],
									[
										42326,
										42331
									],
									[
										42595,
										42600
									],
									[
										42665,
										42670
									],
									[
										42741,
										42746
									],
									[
										42792,
										42797
									],
									[
										42850,
										42855
									],
									[
										42925,
										42930
									],
									[
										43196,
										43201
									],
									[
										43266,
										43271
									],
									[
										43332,
										43337
									],
									[
										43380,
										43385
									],
									[
										43439,
										43444
									],
									[
										43485,
										43490
									],
									[
										43529,
										43534
									],
									[
										43587,
										43592
									],
									[
										43702,
										43707
									],
									[
										43924,
										43929
									],
									[
										43994,
										43999
									],
									[
										44040,
										44045
									],
									[
										44107,
										44112
									],
									[
										44165,
										44170
									],
									[
										44418,
										44423
									],
									[
										44488,
										44493
									],
									[
										44534,
										44539
									],
									[
										44592,
										44597
									],
									[
										44642,
										44647
									],
									[
										44901,
										44906
									],
									[
										44971,
										44976
									],
									[
										45042,
										45047
									],
									[
										45297,
										45302
									],
									[
										45367,
										45372
									],
									[
										45456,
										45461
									],
									[
										45587,
										45592
									],
									[
										45696,
										45701
									],
									[
										45816,
										45821
									],
									[
										46083,
										46088
									],
									[
										46157,
										46162
									],
									[
										46207,
										46212
									],
									[
										46280,
										46285
									],
									[
										46328,
										46333
									],
									[
										46381,
										46386
									],
									[
										46635,
										46640
									],
									[
										46709,
										46714
									],
									[
										46759,
										46764
									],
									[
										46833,
										46838
									],
									[
										46895,
										46900
									],
									[
										46946,
										46951
									],
									[
										47010,
										47015
									],
									[
										47293,
										47298
									],
									[
										47363,
										47368
									],
									[
										47411,
										47416
									],
									[
										47457,
										47462
									],
									[
										47526,
										47531
									],
									[
										47572,
										47577
									],
									[
										47616,
										47621
									],
									[
										47674,
										47679
									],
									[
										47721,
										47726
									],
									[
										47810,
										47815
									],
									[
										47877,
										47882
									],
									[
										47946,
										47951
									],
									[
										48013,
										48018
									],
									[
										48061,
										48066
									],
									[
										48372,
										48377
									],
									[
										48442,
										48447
									],
									[
										48535,
										48540
									],
									[
										48625,
										48630
									],
									[
										48891,
										48896
									],
									[
										48961,
										48966
									],
									[
										49007,
										49012
									],
									[
										49065,
										49070
									],
									[
										49172,
										49177
									],
									[
										49280,
										49285
									],
									[
										49354,
										49359
									],
									[
										49429,
										49434
									],
									[
										49493,
										49498
									],
									[
										49782,
										49787
									],
									[
										49852,
										49857
									],
									[
										49965,
										49970
									],
									[
										50325,
										50330
									],
									[
										50395,
										50400
									],
									[
										50508,
										50513
									],
									[
										50799,
										50804
									],
									[
										50869,
										50874
									],
									[
										50977,
										50982
									],
									[
										51042,
										51047
									],
									[
										51106,
										51111
									],
									[
										51225,
										51230
									],
									[
										51474,
										51479
									],
									[
										51544,
										51549
									],
									[
										51652,
										51657
									],
									[
										51717,
										51722
									],
									[
										51781,
										51786
									],
									[
										51900,
										51905
									],
									[
										51948,
										51953
									],
									[
										52230,
										52235
									],
									[
										52300,
										52305
									],
									[
										52552,
										52557
									],
									[
										52622,
										52627
									],
									[
										52703,
										52708
									],
									[
										52749,
										52754
									],
									[
										52795,
										52800
									],
									[
										52855,
										52860
									],
									[
										53260,
										53265
									],
									[
										53330,
										53335
									],
									[
										53428,
										53433
									],
									[
										53578,
										53583
									],
									[
										53732,
										53737
									],
									[
										53805,
										53810
									],
									[
										53939,
										53944
									],
									[
										54075,
										54080
									],
									[
										54211,
										54216
									],
									[
										54347,
										54352
									],
									[
										54477,
										54482
									],
									[
										54621,
										54626
									],
									[
										54763,
										54768
									],
									[
										54881,
										54886
									],
									[
										54938,
										54943
									],
									[
										55066,
										55071
									],
									[
										55214,
										55219
									],
									[
										55364,
										55369
									],
									[
										55518,
										55523
									],
									[
										55585,
										55590
									],
									[
										55751,
										55756
									],
									[
										55897,
										55902
									],
									[
										56315,
										56320
									],
									[
										56570,
										56575
									],
									[
										56883,
										56888
									],
									[
										57173,
										57178
									],
									[
										57449,
										57454
									],
									[
										57519,
										57524
									],
									[
										57591,
										57596
									],
									[
										57670,
										57675
									],
									[
										57764,
										57769
									],
									[
										57851,
										57856
									],
									[
										57965,
										57970
									],
									[
										58200,
										58205
									],
									[
										58270,
										58275
									],
									[
										58357,
										58362
									],
									[
										58468,
										58473
									],
									[
										58549,
										58554
									],
									[
										58653,
										58658
									],
									[
										58784,
										58789
									],
									[
										58867,
										58872
									],
									[
										59142,
										59147
									],
									[
										59224,
										59229
									],
									[
										59323,
										59328
									],
									[
										59446,
										59451
									],
									[
										59539,
										59544
									],
									[
										59655,
										59660
									],
									[
										59798,
										59803
									],
									[
										59893,
										59898
									],
									[
										60141,
										60146
									],
									[
										60211,
										60216
									],
									[
										60256,
										60261
									],
									[
										60472,
										60477
									],
									[
										60542,
										60547
									],
									[
										60588,
										60593
									],
									[
										60645,
										60650
									],
									[
										60691,
										60696
									],
									[
										60738,
										60743
									],
									[
										60786,
										60791
									],
									[
										60833,
										60838
									],
									[
										61086,
										61091
									],
									[
										61156,
										61161
									],
									[
										61232,
										61237
									],
									[
										61283,
										61288
									],
									[
										61341,
										61346
									],
									[
										61416,
										61421
									],
									[
										61671,
										61676
									],
									[
										61741,
										61746
									],
									[
										61807,
										61812
									],
									[
										61855,
										61860
									],
									[
										61914,
										61919
									],
									[
										61960,
										61965
									],
									[
										62004,
										62009
									],
									[
										62062,
										62067
									],
									[
										62177,
										62182
									],
									[
										62383,
										62388
									],
									[
										62453,
										62458
									],
									[
										62499,
										62504
									],
									[
										62566,
										62571
									],
									[
										62624,
										62629
									],
									[
										62861,
										62866
									],
									[
										62931,
										62936
									],
									[
										62977,
										62982
									],
									[
										63035,
										63040
									],
									[
										63085,
										63090
									],
									[
										63328,
										63333
									],
									[
										63398,
										63403
									],
									[
										63469,
										63474
									],
									[
										63708,
										63713
									],
									[
										63778,
										63783
									],
									[
										63867,
										63872
									],
									[
										63998,
										64003
									],
									[
										64107,
										64112
									],
									[
										64227,
										64232
									],
									[
										64478,
										64483
									],
									[
										64552,
										64557
									],
									[
										64602,
										64607
									],
									[
										64675,
										64680
									],
									[
										64723,
										64728
									],
									[
										64776,
										64781
									],
									[
										65014,
										65019
									],
									[
										65088,
										65093
									],
									[
										65138,
										65143
									],
									[
										65212,
										65217
									],
									[
										65274,
										65279
									],
									[
										65325,
										65330
									],
									[
										65389,
										65394
									],
									[
										65695,
										65700
									],
									[
										66024,
										66029
									],
									[
										66187,
										66192
									],
									[
										66369,
										66374
									],
									[
										66438,
										66443
									],
									[
										66649,
										66654
									],
									[
										66799,
										66804
									],
									[
										67136,
										67141
									],
									[
										67636,
										67641
									],
									[
										68123,
										68128
									],
									[
										68623,
										68628
									],
									[
										69118,
										69123
									],
									[
										69618,
										69623
									],
									[
										70176,
										70181
									],
									[
										70676,
										70681
									],
									[
										71229,
										71234
									],
									[
										71729,
										71734
									],
									[
										72290,
										72295
									],
									[
										72790,
										72795
									],
									[
										73314,
										73319
									],
									[
										73763,
										73768
									],
									[
										74114,
										74119
									],
									[
										74606,
										74611
									],
									[
										74952,
										74957
									],
									[
										75014,
										75019
									],
									[
										75134,
										75139
									],
									[
										75524,
										75529
									],
									[
										75830,
										75835
									],
									[
										76105,
										76110
									],
									[
										76170,
										76175
									],
									[
										76221,
										76226
									],
									[
										76280,
										76285
									],
									[
										76360,
										76365
									],
									[
										76432,
										76437
									],
									[
										76527,
										76532
									],
									[
										76591,
										76596
									],
									[
										76667,
										76672
									],
									[
										76713,
										76718
									],
									[
										76826,
										76831
									],
									[
										77139,
										77144
									],
									[
										77418,
										77423
									],
									[
										77488,
										77493
									],
									[
										77539,
										77544
									],
									[
										77599,
										77604
									],
									[
										77674,
										77679
									],
									[
										77742,
										77747
									],
									[
										77837,
										77842
									],
									[
										78067,
										78072
									],
									[
										78137,
										78142
									],
									[
										78204,
										78209
									],
									[
										78295,
										78300
									],
									[
										78356,
										78361
									],
									[
										78440,
										78445
									],
									[
										78551,
										78556
									],
									[
										78614,
										78619
									],
									[
										78885,
										78890
									],
									[
										78967,
										78972
									],
									[
										79046,
										79051
									],
									[
										79149,
										79154
									],
									[
										79222,
										79227
									],
									[
										79318,
										79323
									],
									[
										79441,
										79446
									],
									[
										79516,
										79521
									],
									[
										79776,
										79781
									],
									[
										79846,
										79851
									],
									[
										79891,
										79896
									],
									[
										80123,
										80128
									],
									[
										80193,
										80198
									],
									[
										80239,
										80244
									],
									[
										80296,
										80301
									],
									[
										80342,
										80347
									],
									[
										80389,
										80394
									],
									[
										80437,
										80442
									],
									[
										80484,
										80489
									],
									[
										80753,
										80758
									],
									[
										80823,
										80828
									],
									[
										80899,
										80904
									],
									[
										80950,
										80955
									],
									[
										81008,
										81013
									],
									[
										81083,
										81088
									],
									[
										81354,
										81359
									],
									[
										81424,
										81429
									],
									[
										81490,
										81495
									],
									[
										81538,
										81543
									],
									[
										81597,
										81602
									],
									[
										81643,
										81648
									],
									[
										81687,
										81692
									],
									[
										81745,
										81750
									],
									[
										81860,
										81865
									],
									[
										82082,
										82087
									],
									[
										82152,
										82157
									],
									[
										82198,
										82203
									],
									[
										82265,
										82270
									],
									[
										82323,
										82328
									],
									[
										82576,
										82581
									],
									[
										82646,
										82651
									],
									[
										82692,
										82697
									],
									[
										82750,
										82755
									],
									[
										82800,
										82805
									],
									[
										83059,
										83064
									],
									[
										83129,
										83134
									],
									[
										83200,
										83205
									],
									[
										83455,
										83460
									],
									[
										83525,
										83530
									],
									[
										83614,
										83619
									],
									[
										83745,
										83750
									],
									[
										83854,
										83859
									],
									[
										83974,
										83979
									],
									[
										84241,
										84246
									],
									[
										84315,
										84320
									],
									[
										84365,
										84370
									],
									[
										84438,
										84443
									],
									[
										84486,
										84491
									],
									[
										84539,
										84544
									],
									[
										84793,
										84798
									],
									[
										84867,
										84872
									],
									[
										84917,
										84922
									],
									[
										84991,
										84996
									],
									[
										85053,
										85058
									],
									[
										85104,
										85109
									],
									[
										85168,
										85173
									],
									[
										85451,
										85456
									],
									[
										85521,
										85526
									],
									[
										85569,
										85574
									],
									[
										85615,
										85620
									],
									[
										85684,
										85689
									],
									[
										85730,
										85735
									],
									[
										85774,
										85779
									],
									[
										85832,
										85837
									],
									[
										85879,
										85884
									],
									[
										85968,
										85973
									],
									[
										86035,
										86040
									],
									[
										86104,
										86109
									],
									[
										86171,
										86176
									],
									[
										86219,
										86224
									],
									[
										86530,
										86535
									],
									[
										86600,
										86605
									],
									[
										86693,
										86698
									],
									[
										86783,
										86788
									],
									[
										87049,
										87054
									],
									[
										87119,
										87124
									],
									[
										87165,
										87170
									],
									[
										87223,
										87228
									],
									[
										87330,
										87335
									],
									[
										87438,
										87443
									],
									[
										87512,
										87517
									],
									[
										87587,
										87592
									],
									[
										87651,
										87656
									],
									[
										87940,
										87945
									],
									[
										88010,
										88015
									],
									[
										88123,
										88128
									],
									[
										88483,
										88488
									],
									[
										88553,
										88558
									],
									[
										88666,
										88671
									],
									[
										88957,
										88962
									],
									[
										89027,
										89032
									],
									[
										89135,
										89140
									],
									[
										89200,
										89205
									],
									[
										89264,
										89269
									],
									[
										89383,
										89388
									],
									[
										89632,
										89637
									],
									[
										89702,
										89707
									],
									[
										89810,
										89815
									],
									[
										89875,
										89880
									],
									[
										89939,
										89944
									],
									[
										90058,
										90063
									],
									[
										90106,
										90111
									],
									[
										90388,
										90393
									],
									[
										90458,
										90463
									],
									[
										90710,
										90715
									],
									[
										90780,
										90785
									],
									[
										90861,
										90866
									],
									[
										90907,
										90912
									],
									[
										90953,
										90958
									],
									[
										91013,
										91018
									],
									[
										91439,
										91444
									],
									[
										91509,
										91514
									],
									[
										91607,
										91612
									],
									[
										91757,
										91762
									],
									[
										91911,
										91916
									],
									[
										91984,
										91989
									],
									[
										92118,
										92123
									],
									[
										92254,
										92259
									],
									[
										92390,
										92395
									],
									[
										92526,
										92531
									],
									[
										92656,
										92661
									],
									[
										92800,
										92805
									],
									[
										92942,
										92947
									],
									[
										93060,
										93065
									],
									[
										93117,
										93122
									],
									[
										93245,
										93250
									],
									[
										93393,
										93398
									],
									[
										93543,
										93548
									],
									[
										93697,
										93702
									],
									[
										93764,
										93769
									],
									[
										93930,
										93935
									],
									[
										94076,
										94081
									],
									[
										94515,
										94520
									],
									[
										94791,
										94796
									],
									[
										95125,
										95130
									],
									[
										95415,
										95420
									],
									[
										95691,
										95696
									],
									[
										95761,
										95766
									],
									[
										95833,
										95838
									],
									[
										95912,
										95917
									],
									[
										96006,
										96011
									],
									[
										96093,
										96098
									],
									[
										96207,
										96212
									],
									[
										96442,
										96447
									],
									[
										96512,
										96517
									],
									[
										96599,
										96604
									],
									[
										96710,
										96715
									],
									[
										96791,
										96796
									],
									[
										96895,
										96900
									],
									[
										97026,
										97031
									],
									[
										97109,
										97114
									],
									[
										97384,
										97389
									],
									[
										97466,
										97471
									],
									[
										97565,
										97570
									],
									[
										97688,
										97693
									],
									[
										97781,
										97786
									],
									[
										97897,
										97902
									],
									[
										98040,
										98045
									],
									[
										98135,
										98140
									],
									[
										98383,
										98388
									],
									[
										98453,
										98458
									],
									[
										98498,
										98503
									],
									[
										98714,
										98719
									],
									[
										98784,
										98789
									],
									[
										98830,
										98835
									],
									[
										98887,
										98892
									],
									[
										98933,
										98938
									],
									[
										98980,
										98985
									],
									[
										99028,
										99033
									],
									[
										99075,
										99080
									],
									[
										99328,
										99333
									],
									[
										99398,
										99403
									],
									[
										99474,
										99479
									],
									[
										99525,
										99530
									],
									[
										99583,
										99588
									],
									[
										99658,
										99663
									],
									[
										99913,
										99918
									],
									[
										99983,
										99988
									],
									[
										100049,
										100054
									],
									[
										100097,
										100102
									],
									[
										100156,
										100161
									],
									[
										100202,
										100207
									],
									[
										100246,
										100251
									],
									[
										100304,
										100309
									],
									[
										100419,
										100424
									],
									[
										100625,
										100630
									],
									[
										100695,
										100700
									],
									[
										100741,
										100746
									],
									[
										100808,
										100813
									],
									[
										100866,
										100871
									],
									[
										101103,
										101108
									],
									[
										101173,
										101178
									],
									[
										101219,
										101224
									],
									[
										101277,
										101282
									],
									[
										101327,
										101332
									],
									[
										101570,
										101575
									],
									[
										101640,
										101645
									],
									[
										101711,
										101716
									],
									[
										101950,
										101955
									],
									[
										102020,
										102025
									],
									[
										102109,
										102114
									],
									[
										102240,
										102245
									],
									[
										102349,
										102354
									],
									[
										102469,
										102474
									],
									[
										102720,
										102725
									],
									[
										102794,
										102799
									],
									[
										102844,
										102849
									],
									[
										102917,
										102922
									],
									[
										102965,
										102970
									],
									[
										103018,
										103023
									],
									[
										103256,
										103261
									],
									[
										103330,
										103335
									],
									[
										103380,
										103385
									],
									[
										103454,
										103459
									],
									[
										103516,
										103521
									],
									[
										103567,
										103572
									],
									[
										103631,
										103636
									],
									[
										103958,
										103963
									],
									[
										104308,
										104313
									],
									[
										104471,
										104476
									],
									[
										104653,
										104658
									],
									[
										104722,
										104727
									],
									[
										104933,
										104938
									],
									[
										105083,
										105088
									],
									[
										105408,
										105413
									],
									[
										105829,
										105834
									],
									[
										106445,
										106450
									],
									[
										107082,
										107087
									],
									[
										107582,
										107587
									],
									[
										108098,
										108103
									],
									[
										108598,
										108603
									],
									[
										109082,
										109087
									],
									[
										109422,
										109427
									],
									[
										109922,
										109927
									],
									[
										110463,
										110468
									],
									[
										110963,
										110968
									],
									[
										111512,
										111517
									],
									[
										112012,
										112017
									],
									[
										112524,
										112529
									],
									[
										112961,
										112966
									],
									[
										113300,
										113305
									],
									[
										113780,
										113785
									],
									[
										114114,
										114119
									],
									[
										114176,
										114181
									],
									[
										114296,
										114301
									],
									[
										114674,
										114679
									],
									[
										114968,
										114973
									],
									[
										115243,
										115248
									],
									[
										115308,
										115313
									],
									[
										115359,
										115364
									],
									[
										115418,
										115423
									],
									[
										115498,
										115503
									],
									[
										115570,
										115575
									],
									[
										115665,
										115670
									],
									[
										115729,
										115734
									],
									[
										115805,
										115810
									],
									[
										115851,
										115856
									],
									[
										115964,
										115969
									],
									[
										116277,
										116282
									],
									[
										116556,
										116561
									],
									[
										116626,
										116631
									],
									[
										116677,
										116682
									],
									[
										116737,
										116742
									],
									[
										116812,
										116817
									],
									[
										116880,
										116885
									],
									[
										116975,
										116980
									],
									[
										117205,
										117210
									],
									[
										117275,
										117280
									],
									[
										117342,
										117347
									],
									[
										117433,
										117438
									],
									[
										117494,
										117499
									],
									[
										117578,
										117583
									],
									[
										117689,
										117694
									],
									[
										117752,
										117757
									],
									[
										118023,
										118028
									],
									[
										118105,
										118110
									],
									[
										118184,
										118189
									],
									[
										118287,
										118292
									],
									[
										118360,
										118365
									],
									[
										118456,
										118461
									],
									[
										118579,
										118584
									],
									[
										118654,
										118659
									],
									[
										118914,
										118919
									],
									[
										118984,
										118989
									],
									[
										119029,
										119034
									],
									[
										119261,
										119266
									],
									[
										119331,
										119336
									],
									[
										119377,
										119382
									],
									[
										119434,
										119439
									],
									[
										119480,
										119485
									],
									[
										119527,
										119532
									],
									[
										119575,
										119580
									],
									[
										119622,
										119627
									],
									[
										119891,
										119896
									],
									[
										119961,
										119966
									],
									[
										120037,
										120042
									],
									[
										120088,
										120093
									],
									[
										120146,
										120151
									],
									[
										120221,
										120226
									],
									[
										120492,
										120497
									],
									[
										120562,
										120567
									],
									[
										120628,
										120633
									],
									[
										120676,
										120681
									],
									[
										120735,
										120740
									],
									[
										120781,
										120786
									],
									[
										120825,
										120830
									],
									[
										120883,
										120888
									],
									[
										120998,
										121003
									],
									[
										121220,
										121225
									],
									[
										121290,
										121295
									],
									[
										121336,
										121341
									],
									[
										121403,
										121408
									],
									[
										121461,
										121466
									],
									[
										121714,
										121719
									],
									[
										121784,
										121789
									],
									[
										121830,
										121835
									],
									[
										121888,
										121893
									],
									[
										121938,
										121943
									],
									[
										122197,
										122202
									],
									[
										122267,
										122272
									],
									[
										122338,
										122343
									],
									[
										122593,
										122598
									],
									[
										122663,
										122668
									],
									[
										122752,
										122757
									],
									[
										122883,
										122888
									],
									[
										122992,
										122997
									],
									[
										123112,
										123117
									],
									[
										123379,
										123384
									],
									[
										123453,
										123458
									],
									[
										123503,
										123508
									],
									[
										123576,
										123581
									],
									[
										123624,
										123629
									],
									[
										123677,
										123682
									],
									[
										123931,
										123936
									],
									[
										124005,
										124010
									],
									[
										124055,
										124060
									],
									[
										124129,
										124134
									],
									[
										124191,
										124196
									],
									[
										124242,
										124247
									],
									[
										124306,
										124311
									],
									[
										124589,
										124594
									],
									[
										124659,
										124664
									],
									[
										124707,
										124712
									],
									[
										124753,
										124758
									],
									[
										124822,
										124827
									],
									[
										124868,
										124873
									],
									[
										124912,
										124917
									],
									[
										124970,
										124975
									],
									[
										125017,
										125022
									],
									[
										125106,
										125111
									],
									[
										125173,
										125178
									],
									[
										125242,
										125247
									],
									[
										125309,
										125314
									],
									[
										125357,
										125362
									],
									[
										125668,
										125673
									],
									[
										125738,
										125743
									],
									[
										125831,
										125836
									],
									[
										125921,
										125926
									],
									[
										126187,
										126192
									],
									[
										126257,
										126262
									],
									[
										126303,
										126308
									],
									[
										126361,
										126366
									],
									[
										126468,
										126473
									],
									[
										126576,
										126581
									],
									[
										126650,
										126655
									],
									[
										126725,
										126730
									],
									[
										126789,
										126794
									],
									[
										127078,
										127083
									],
									[
										127148,
										127153
									],
									[
										127261,
										127266
									],
									[
										127621,
										127626
									],
									[
										127691,
										127696
									],
									[
										127804,
										127809
									],
									[
										128095,
										128100
									],
									[
										128165,
										128170
									],
									[
										128273,
										128278
									],
									[
										128338,
										128343
									],
									[
										128402,
										128407
									],
									[
										128521,
										128526
									],
									[
										128770,
										128775
									],
									[
										128840,
										128845
									],
									[
										128948,
										128953
									],
									[
										129013,
										129018
									],
									[
										129077,
										129082
									],
									[
										129196,
										129201
									],
									[
										129244,
										129249
									],
									[
										129526,
										129531
									],
									[
										129596,
										129601
									],
									[
										129848,
										129853
									],
									[
										129918,
										129923
									],
									[
										129999,
										130004
									],
									[
										130045,
										130050
									],
									[
										130091,
										130096
									],
									[
										130151,
										130156
									],
									[
										130565,
										130570
									],
									[
										130635,
										130640
									],
									[
										130733,
										130738
									],
									[
										130883,
										130888
									],
									[
										131037,
										131042
									],
									[
										131110,
										131115
									],
									[
										131244,
										131249
									],
									[
										131380,
										131385
									],
									[
										131516,
										131521
									],
									[
										131652,
										131657
									],
									[
										131782,
										131787
									],
									[
										131926,
										131931
									],
									[
										132068,
										132073
									],
									[
										132186,
										132191
									],
									[
										132243,
										132248
									],
									[
										132371,
										132376
									],
									[
										132519,
										132524
									],
									[
										132669,
										132674
									],
									[
										132823,
										132828
									],
									[
										132890,
										132895
									],
									[
										133056,
										133061
									],
									[
										133202,
										133207
									],
									[
										133629,
										133634
									],
									[
										133893,
										133898
									],
									[
										134215,
										134220
									],
									[
										134505,
										134510
									],
									[
										134781,
										134786
									],
									[
										134851,
										134856
									],
									[
										134923,
										134928
									],
									[
										135002,
										135007
									],
									[
										135096,
										135101
									],
									[
										135183,
										135188
									],
									[
										135297,
										135302
									],
									[
										135532,
										135537
									],
									[
										135602,
										135607
									],
									[
										135689,
										135694
									],
									[
										135800,
										135805
									],
									[
										135881,
										135886
									],
									[
										135985,
										135990
									],
									[
										136116,
										136121
									],
									[
										136199,
										136204
									],
									[
										136474,
										136479
									],
									[
										136556,
										136561
									],
									[
										136655,
										136660
									],
									[
										136778,
										136783
									],
									[
										136871,
										136876
									],
									[
										136987,
										136992
									],
									[
										137130,
										137135
									],
									[
										137225,
										137230
									],
									[
										137473,
										137478
									],
									[
										137543,
										137548
									],
									[
										137588,
										137593
									],
									[
										137804,
										137809
									],
									[
										137874,
										137879
									],
									[
										137920,
										137925
									],
									[
										137977,
										137982
									],
									[
										138023,
										138028
									],
									[
										138070,
										138075
									],
									[
										138118,
										138123
									],
									[
										138165,
										138170
									],
									[
										138418,
										138423
									],
									[
										138488,
										138493
									],
									[
										138564,
										138569
									],
									[
										138615,
										138620
									],
									[
										138673,
										138678
									],
									[
										138748,
										138753
									],
									[
										139003,
										139008
									],
									[
										139073,
										139078
									],
									[
										139139,
										139144
									],
									[
										139187,
										139192
									],
									[
										139246,
										139251
									],
									[
										139292,
										139297
									],
									[
										139336,
										139341
									],
									[
										139394,
										139399
									],
									[
										139509,
										139514
									],
									[
										139715,
										139720
									],
									[
										139785,
										139790
									],
									[
										139831,
										139836
									],
									[
										139898,
										139903
									],
									[
										139956,
										139961
									],
									[
										140193,
										140198
									],
									[
										140263,
										140268
									],
									[
										140309,
										140314
									],
									[
										140367,
										140372
									],
									[
										140417,
										140422
									],
									[
										140660,
										140665
									],
									[
										140730,
										140735
									],
									[
										140801,
										140806
									],
									[
										141040,
										141045
									],
									[
										141110,
										141115
									],
									[
										141199,
										141204
									],
									[
										141330,
										141335
									],
									[
										141439,
										141444
									],
									[
										141559,
										141564
									],
									[
										141810,
										141815
									],
									[
										141884,
										141889
									],
									[
										141934,
										141939
									],
									[
										142007,
										142012
									],
									[
										142055,
										142060
									],
									[
										142108,
										142113
									],
									[
										142346,
										142351
									],
									[
										142420,
										142425
									],
									[
										142470,
										142475
									],
									[
										142544,
										142549
									],
									[
										142606,
										142611
									],
									[
										142657,
										142662
									],
									[
										142721,
										142726
									],
									[
										143036,
										143041
									],
									[
										143374,
										143379
									],
									[
										143537,
										143542
									],
									[
										143719,
										143724
									],
									[
										143788,
										143793
									],
									[
										143999,
										144004
									],
									[
										144149,
										144154
									],
									[
										144462,
										144467
									],
									[
										144871,
										144876
									],
									[
										145475,
										145480
									],
									[
										146100,
										146105
									],
									[
										146600,
										146605
									],
									[
										147104,
										147109
									],
									[
										147604,
										147609
									],
									[
										148131,
										148136
									],
									[
										148369,
										148374
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								148425,
								148347
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										148435,
										148436
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										148242,
										148243
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"default_dir": "E:\\MyStuff\\Personal\\Trainings\\Angular_Udemy\\_RecipeBook\\src\\app\\recipes",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1542304234.87,
							"tabs_extra_last_activated_sheet_index": 4
						},
						"translation.x": 0.0,
						"translation.y": 57193.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "_RecipeBook/src/app/header/header.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 304,
						"regions":
						{
						},
						"selection":
						[
							[
								295,
								295
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										295,
										296
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										287,
										288
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tabs_extra_last_activated": 1542304499.61,
							"tabs_extra_last_activated_sheet_index": 5,
							"tabs_extra_spawned": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "_RecipeBook/src/app/header/header.component.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 904,
						"regions":
						{
						},
						"selection":
						[
							[
								301,
								305
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										842,
										845
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"region.orangish"
									]
								},
								"open":
								{
									"1":
									[
										1,
										4
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										315,
										316
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										305,
										306
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1542304233.93,
							"tabs_extra_last_activated_sheet_index": 6,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "_RecipeBook/src/app/recipes/recipe.model.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 276,
						"regions":
						{
						},
						"selection":
						[
							[
								276,
								276
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										299,
										300
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										20,
										21
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										275,
										276
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										20,
										21
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tabs_extra_last_activated": 1542303981.32,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_spawned": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 77.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 144.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "AngularSublimeProject.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"server.model",
				"cmp-databinding_5_60\\src\\app\\shared\\server.model.ts"
			],
			[
				"server.mo",
				"cmp-databinding_5_60\\src\\app\\shared\\server.model.ts"
			],
			[
				"app.com",
				"cmp-databinding_5_60\\src\\app\\app.component.ts"
			],
			[
				"courss",
				"CourseNotes.txt"
			],
			[
				"recipe-list",
				"_RecipeBook\\src\\app\\recipes\\recipe-list\\recipe-list.component.ts"
			],
			[
				"Course",
				"CourseNotes.txt"
			],
			[
				"shopping-list-ed",
				"_RecipeBook/src/app/shopping-list/shopping-edit/shopping-edit.component.html"
			],
			[
				"ingredient",
				"_RecipeBook/src/app/shared/ingredient.model.ts"
			],
			[
				"shopping-l",
				"_RecipeBook/src/app/shopping-list/shopping-list.component.ts"
			],
			[
				"shopping-list",
				"_RecipeBook/src/app/shopping-list/shopping-list.component.html"
			],
			[
				"recipe-deta",
				"_RecipeBook/src/app/recipes/recipe-detail/recipe-detail.component.html"
			],
			[
				"course no",
				"CourseNotes.txt"
			],
			[
				"c",
				"CourseNotes.txt"
			],
			[
				"cours",
				"CourseNotes.txt"
			],
			[
				"cour",
				"CourseNotes.txt"
			],
			[
				"cou",
				"CourseNotes.txt"
			],
			[
				"course",
				"CourseNotes.txt"
			],
			[
				"inde",
				"agiloft\\index.html"
			],
			[
				"main.j",
				"agiloft\\src\\main.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"E:\\MyStuff\\Personal\\Trainings\\Vue_Agiloft_Poc\\Vue_Agiloft_Poc.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 366.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 3
	}
}
